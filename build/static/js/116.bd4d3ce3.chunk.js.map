{"version":3,"file":"static/js/116.bd4d3ce3.chunk.js","mappings":"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","sources":["api/APIAdmin.js","views/admin/Firms/Create_New_Firm.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\n\nconst api_url = 'http://3.111.33.23:3007';\n\n\nconst APIAdmin = () => {\n\n\n  //Create Firm\n  const CREATE_FIRM = async (userId, data) => {\n    try {\n      const response = await axios.post(`${api_url}/api/users/create_firm/${userId}`, data);\n      return response.data;\n    } catch (error) {\n      console.log(\"Unable to create firm:\", error);\n      throw error;\n    }\n  };\n\n//Get All firms user_id\n  const GET_ALL_FIRMS = async (userId) => {\n  try {\n    const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.log(\"Unable to fetch firms:\", error);\n    throw error;\n  }\n};\n\n  // CRUD Opearation of General Ledger\n  // Create Gen Ledger using firm_id\n  const CREATE_GENE_LEDGER = async (firm_id, data) => {\n    try {\n      const response = await axios.post(`${api_url}/api/users/create_general_ledgers/${firm_id}`, data);\n      const json_response = await response.json();\n      return json_response;\n    } catch (error) {\n      console.log('Unable to create gene ledger:', error);\n      throw error;\n    }\n  };\n\n  const GET_GENE_LEDGER = async (firm_id) => {\n    try {\n      const response = await fetch(`${api_url}/api/users/get_general_ledgers/${firm_id}`);\n      const json_response = await response.json();\n      return json_response;\n    } catch (error) {\n      console.log('Invalid credentials:', error);\n      throw error;\n    }\n  };\n\n  const UPDATE_GENE_LEDGER = async (firm_id, gl_id, data) => {\n    try {\n      const response = await axios.update(`${api_url}/api/users/update_general_ledgers/${firm_id}/${gl_id}`, data);\n      const json_response = await response.json();\n      return json_response;\n    } catch (error) {\n      console.log('Invalid credentials:', error);\n      throw error;\n    }\n  };\n\n  const DELETE_GENE_LEDGER = async (firm_id, gl_id) => {\n    try {\n      const response = await axios.delete(`${api_url}/api/users/delete_general_ledgers/${firm_id}/${gl_id}`);\n      const json_response = await response.json();\n      return json_response;\n    } catch (error) {\n      console.log('Invalid credentials:', error);\n      throw error;\n    }\n  };\n\n  // const GET_ALL_GENE_LEDGER = async (firm_id) => {\n  //   try {\n  //     const response = await fetch(`${api_url}/api/users/get_general_ledgers/${firm_id}`);\n  //     const json_response = await response.json();\n  //     return json_response;\n  //   } catch (error) {\n  //     console.log('Invalid credentials:', error);\n  //     throw error;\n  //   }\n  // };\n  // //---------------------\n  // //Fetch Menu list and Permissions list\n  // const MENU_AND_PERMISSIONS = async () => {\n  //   try {\n  //     const response = await fetch(`${api_url}/fetch_menu_permissions`);\n  //     const json_response = await response.json();\n  //     return json_response;\n  //   } catch (error) {\n  //     console.error('Error fetching menu permissions:', error);\n  //     throw error;\n  //   }\n  // };\n\n  //   //Assign Menu and Permissions to Roles/Designations\n  // const ADDROLE_WITH_PERMISSIONS = async (userId, instituteId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Role_And_MenuAccess/${userId}/${instituteId}`, data);\n  //     const json_response = await response.data;\n      \n  //     return json_response;\n  //   } catch (error) {\n  //     console.log('MenuPermissions are not added:', error);\n  //     throw error;\n  //   }\n  // };\n\n  // //Add users with role and menu and permissions\n  // const ADD_USER_WITH_ROLE_PERMISSIONS = async (userId, instituteId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Users_with_MenuAccess/${userId}/${instituteId}`, data);\n  //     const json_response = await response.data;\n      \n  //     return json_response;\n  //   } catch (error) {\n  //     console.log('MenuPermissions are not added:', error);\n  //     throw error;\n  //   }\n  // };\n\n\n  return { CREATE_FIRM, GET_ALL_FIRMS, CREATE_GENE_LEDGER, GET_GENE_LEDGER, UPDATE_GENE_LEDGER,DELETE_GENE_LEDGER };\n}\n\nexport { APIAdmin };\n\n\n// import React from 'react';\n// import axios from 'axios';\n\n\n\n// const api_url = 'http://192.168.1.75:3007';\n\n\n\n// const APIAdmin = () => {\n\n//   //CRUD Operations by Admin\n//   //Designation CRUD\n//   //Adding\n//   const DESIGNATION_CRUD_ADD = async (userId, instituteId, data) => {\n//     try {\n//       const response = await axios.post(`${api_url}/Add_Designation/${userId}/${instituteId}`, data);\n//       return response.data;\n//     } catch (error) {\n//       console.log(\"Unable to add Designation:\", error);\n//       throw error;\n//     }\n//   };\n\n//   //Fetching CRUD Designations List\n//   const DESIGNATION_CRUD_FETCH = async (instituteId) => {\n//     try {\n//       const response = await fetch(`${api_url}/Get_All_Designation/${instituteId}`);\n//       const json_response = await response.json();\n//       return json_response;\n//     } catch (error) {\n//       console.log('Invalid credentials:', error);\n//       throw error;\n//     }\n//   };\n//   //---------------------\n//   //Fetch Menu list and Permissions list\n//   const MENU_AND_PERMISSIONS = async () => {\n//     try {\n//       const response = await fetch(`${api_url}/fetch_menu_permissions`);\n//       const json_response = await response.json();\n//       return json_response;\n//     } catch (error) {\n//       console.error('Error fetching menu permissions:', error);\n//       throw error;\n//     }\n//   };\n\n//     //Assign Menu and Permissions to Roles/Designations\n//   const ADDROLE_WITH_PERMISSIONS = async (userId, instituteId, data) => {\n//     try {\n//       const response = await axios.post(`${api_url}/Add_Role_And_MenuAccess/${userId}/${instituteId}`, data);\n//       const json_response = await response.data;\n      \n//       return json_response;\n//     } catch (error) {\n//       console.log('MenuPermissions are not added:', error);\n//       throw error;\n//     }\n//   };\n\n//   //Add users with role and menu and permissions\n//   const ADD_USER_WITH_ROLE_PERMISSIONS = async (userId, instituteId, data) => {\n//     try {\n//       const response = await axios.post(`${api_url}/Add_Users_with_MenuAccess/${userId}/${instituteId}`, data);\n//       const json_response = await response.data;\n      \n//       return json_response;\n//     } catch (error) {\n//       console.log('MenuPermissions are not added:', error);\n//       throw error;\n//     }\n//   };\n\n\n//   return { DESIGNATION_CRUD_ADD, DESIGNATION_CRUD_FETCH, MENU_AND_PERMISSIONS, ADDROLE_WITH_PERMISSIONS, ADD_USER_WITH_ROLE_PERMISSIONS };\n// }\n\n// export { APIAdmin };\n\n\n\n\n// // import axios from 'axios';\n\n// // const userId = \"45\";\n// // const schoolId = \"20\"\n\n// // // const api_url = 'http://192.168.1.43:3005';\n\n// // const api_url = 'http://localhost:3005';\n\n\n// // // Fetch\n\n// // export const fetchClass = async () => {\n// //     try {\n// //       const response = await axios.get(`${api_url}/classdata/${schoolId}`);\n// //       return response.data;\n// //     } catch (error) {\n// //       console.error('Error fetching class:', error);\n// //       throw error;\n// //     }\n// // };\n\n\n// // export const fetchSection = async () => {\n// //     try {\n// //       const response = await axios.get(`${api_url}/sectiondata/${schoolId}`);\n// //       return response.data;\n// //     } catch (error) {\n// //       console.error('Error fetching section:', error);\n// //       throw error;\n// //     }\n// // };\n\n\n// // export const fetchTeacher = async () => {\n// //     try {\n// //       const response = await axios.get(`${api_url}/teacherdata/${schoolId}`);\n// //       return response.data;\n// //     } catch (error) {\n// //       console.error('Error fetching teacher:', error);\n// //       throw error;\n// //     }\n// // };\n\n\n// // export const fetchSubject = async () => {\n// //     try {\n// //       const response = await axios.get(`${api_url}/subjectdata/${schoolId}`);\n// //       return response.data;\n// //     } catch (error) {\n// //       console.error('Error fetching subject:', error);\n// //       throw error;\n// //     }\n// // };\n\n\n// // export const fetchStudentsFromClass = async (classId) => {\n// //   try {\n// //       const response = await axios.get(`${api_url}/getStudentFrom_Class/${classId}`);\n// //       return response.data;\n// //   } catch (error) {\n// //       throw new Error('Error fetching student data from class');\n// //   }\n// // }\n\n\n// // export const fetchClassSection = async () => {\n// //   try {\n// //       const response = await axios.get(`${api_url}/getClass_Section_admin/${schoolId}`);\n// //       return response.data;\n// //   } catch (error) {\n// //       throw new Error('Error fetching student data from class');\n// //   }\n// // }\n\n\n// // export const fetchClassSubTeacher = async () => {\n// //   try {\n// //       const response = await axios.get(`${api_url}/getClsSecTeachSub_For_admin/${schoolId}`);\n// //       return response.data;\n// //   } catch (error) {\n// //       throw new Error('Error fetching class subject teacher');\n// //   }\n// // }\n\n\n// // export const fetchStudent = async () => {\n// //   try {\n// //       const response = await axios.get(`${api_url}/studentdata/${schoolId}`);\n// //       return response.data;\n// //   } catch (error) {\n// //       throw new Error('Error fetching student');\n// //   }\n// // }\n\n\n// // export const fetchStudentClass = async () => {\n// //   try {\n// //       const response = await axios.get(`${api_url}/getStudents_Class_For_admin/${schoolId}`);\n// //       return response.data;\n// //   } catch (error) {\n// //       throw new Error('Error fetching student class');\n// //   }\n// // }\n\n\n// // // Add or Register\n\n// // export const registerTeacher = async (teacherData) => {\n// //     try {\n// //       const response = await axios.post(`${api_url}/teachers/${userId}/${schoolId}`, teacherData);\n// //       return response.data;\n// //     } catch (error) {\n// //       console.log('Error registering teacher:', error);\n// //       throw error;\n// //     }\n// // };\n\n\n// // export const addClass = async (classData) => {\n// //     try {\n// //     const response = await axios.post(`${api_url}/addingClass/${userId}/${schoolId}`, classData);\n// //     return response.data;\n// //     } catch (error) {\n// //     console.log('Error adding class:', error);\n// //     throw error;\n// //     }\n// // };\n\n// // export const addSection = async (sectionData) => {\n// //     try {\n// //     const response = await axios.post(`${api_url}/addingSection/${userId}/${schoolId}`, sectionData);\n// //     return response.data;\n// //     } catch (error) {\n// //     console.log('Error adding section:', error);\n// //     throw error;\n// //     }\n// // };\n\n// // export const addSubject = async (subjectData) => {\n// //     try {\n// //     const response = await axios.post(`${api_url}/addingSubject/${userId}/${schoolId}`, subjectData);\n// //     return response.data;\n// //     } catch (error) {\n// //     console.log('Error adding subject:', error);\n// //     throw error;\n// //     }\n// // };\n\n\n// // export const addClassSection = async (classSectionData) => {\n// //     try {\n// //     const response = await axios.post(`${api_url}/Assigning_Sub_For_Class_Sec`, classSectionData);\n// //     return response.data;\n// //     } catch (error) {\n// //     console.log('Error adding class section:', error);\n// //     throw error;\n// //     }\n// // };\n\n\n// // export const addSubjectTeacher = async (data) => {\n// //     try {\n// //     const response = await axios.post(`${api_url}/Assigning_Sub_For_Teach`, data);\n// //     return response.data;\n// //     } catch (error) {\n// //     console.log('Error adding subject teacher:', error);\n// //     throw error;\n// //     }\n// // };\n\n\n// // export const registerStudent = async (studentData) => {\n// //   try {\n// //     const response = await axios.post(`${api_url}/students/${userId}/${schoolId}`, studentData);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error registering student:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const addStudentClass = async (data) => {\n// //   try {\n// //   const response = await axios.post(`${api_url}/Adding_Class_Sec_For_Stud`, data);\n// //   return response.data;\n// //   } catch (error) {\n// //   console.log('Error adding subject teacher:', error);\n// //   throw error;\n// //   }\n// // };\n\n\n\n// // //  update or Edit\n\n\n// // export const updateTeacher = async ( editingTeacherId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/updateTeacher/${userId}/${editingTeacherId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating teacher:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const updateClass = async (editingClassId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/updateClass/${userId}/${editingClassId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating class:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const updateSection = async ( editingSectionId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/updateSection/${userId}/${editingSectionId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating section:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const updateSubject = async ( editingSubjectId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/updateSubject/${userId}/${editingSubjectId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating subject:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const updateClassSection = async ( editingClsSecId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/updateClassSection/${userId}/${editingClsSecId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating class section:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const updateClassSubTeacher = async ( editingClsSubTeaId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/updateClsSecSubTea/${userId}/${editingClsSubTeaId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating class section:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const updateStudent = async ( editingStudentId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/updateStudent/${userId}/${editingStudentId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating student:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const updateStudentClass = async ( editingStdClsId, data) => {\n// //   try {\n// //     const response = await axios.put(`${api_url}/addStudentsInStudCls/${userId}/${editingStdClsId}`, data);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error updating student class:', error);\n// //     throw error;\n// //   }\n// // };\n\n// // //  Delete\n\n// // export const deleteTeacher = async ( teacherToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteTeacher/${userId}/${teacherToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting teacher:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const deleteClass = async ( classToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteClass/${userId}/${classToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting class:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const deleteSection = async ( sectionToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteSection/${userId}/${sectionToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting section:', error);\n// //     throw error;\n// //   }\n// // };\n\n// // export const deleteSubject = async (subjectToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteSubject/${userId}/${subjectToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting subject:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const deleteClassSection = async ( clsSecToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteClassSection/${userId}/${clsSecToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting class section:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const deleteClassSubTeacher = async ( clsSecToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteClassSection/${userId}/${clsSecToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting class section:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const deleteStudent = async ( studentToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteStudent/${userId}/${studentToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting class section:', error);\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const deleteStudentClass = async ( stdClsToDelete) => {\n// //   try {\n// //     const response = await axios.delete(`${api_url}/deleteClsStudent/${stdClsToDelete}`);\n// //     return response.data;\n// //   } catch (error) {\n// //     console.log('Error deleting class section:', error);\n// //     throw error;\n// //   }\n// // };","import React, { useContext, useState } from 'react';\nimport { AdminHeader, AdminSidebar } from 'src/components';\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\nimport { Form, FormControl, FormGroup, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { APIAdmin } from 'src/api/APIAdmin';\nimport { UserContext } from 'src/context/UserContextProvider';\nimport 'src/scss/_custom.scss';\n\nconst Create_New_Firm = () => {\n    const { user } = useContext(UserContext);\n    const userId = user.userId;\n\n    const [firmName, setFirmName] = useState('');\n    const [firmAddress, setFirmAddress] = useState('');\n    const [firmGstno, setFirmGstno] = useState('');\n    const [firmEmail, setFirmEmail] = useState('');\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const create_firm = () => {\n        APIAdmin().CREATE_FIRM(userId, {\n            firm_name: firmName,\n            firm_email: firmEmail,\n            firm_gstno: firmGstno,\n            firm_address: firmAddress,\n            firm_status: \"1\"\n        }).then((response) => {\n\n            setSuccessMessage('Firm added successfully!!');\n            setErrorMessage('');\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000);\n        }).catch((error) => {\n            console.error(\"Please fill out details again.\", error);\n            setErrorMessage('Please fill out details again.');\n            setSuccessMessage('');\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000);\n        });\n    };\n\n    return (\n        <div>\n            <AdminSidebar />\n            <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n                <AdminHeader />\n                <div className=\"body flex-grow-1 px-5\">\n                    <Row className=\"justify-content-center mb-3\">\n                        <Col xs={12} md={10} lg={8}>\n                            <div className=\"card_border_color_change py-5\" style={{ borderColor: \"white\" }}>\n                                <Row className=\"allfirms_title_mainrow\">\n                                    <Col xs={8} style={{ marginLeft: \"10px\" }}>\n                                        <Row className=\"allfirms_title_row py-1 align-items-center\">\n                                            <Col xs={1}>\n                                                <img src={AllFirms_logo} width={25} height={25} alt=\"All Firms Logo\" />\n                                            </Col>\n                                            <Col xs={4}>\n                                                <h4>Create Firm</h4>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col xs={3} className=\"text-start\">\n                                        <Link to={'/all_firms'}>\n                                            <Button id=\"but_color\">All Firms</Button>\n                                        </Link>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"allfirms_table_row py-5 justify-content-center\">\n                                    <Col xs={12} md={8}>\n                                        <Form>\n                                            <FormGroup className=\"mb-3\" controlId=\"formFirmName\">\n                                                <FormControl\n                                                    type=\"text\"\n                                                    placeholder=\"Firm Name\"\n                                                    value={firmName}\n                                                    onChange={(e) => setFirmName(e.target.value)}\n                                                />\n                                            </FormGroup>\n\n                                            <FormGroup className=\"mb-3\" controlId=\"formEmailID\">\n                                                <FormControl\n                                                    type=\"email\"\n                                                    placeholder=\"Email address\"\n                                                    value={firmEmail}\n                                                    onChange={(e) => setFirmEmail(e.target.value)}\n                                                />\n                                            </FormGroup>\n\n                                            <FormGroup className=\"mb-3\" controlId=\"formAddress\">\n                                                <FormControl\n                                                    type=\"text\"\n                                                    placeholder=\"Address\"\n                                                    value={firmAddress}\n                                                    onChange={(e) => setFirmAddress(e.target.value)}\n                                                />\n                                            </FormGroup>\n\n                                            <FormGroup className=\"mb-3\" controlId=\"formGSTNumber\">\n                                                <FormControl\n                                                    type=\"text\"\n                                                    placeholder=\"GST Number\"\n                                                    value={firmGstno}\n                                                    onChange={(e) => setFirmGstno(e.target.value)}\n                                                />\n                                            </FormGroup>\n\n                                            <FormGroup className=\"mb-3\" controlId=\"formStatus\">\n                                                <FormControl\n                                                    type=\"text\"\n                                                    placeholder=\"Status\"\n                                                    disabled\n                                                />\n                                            </FormGroup>\n\n                                            <Row className=\"justify-content-center align-content-center\">\n                                                <Button onClick={create_firm} className='col-md-3' id='but_color'>Save</Button>\n                                                {errorMessage && <div className=\"text-danger mt-2 text-center\">{errorMessage}</div>}\n                                                {successMessage && <div className=\"text-success mt-2 text-center\">{successMessage}</div>}\n                                            </Row>\n                                        </Form>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Create_New_Firm;\n"],"names":["api_url","Create_New_Firm","user","useContext","UserContext","userId","firmName","setFirmName","useState","firmAddress","setFirmAddress","firmGstno","setFirmGstno","firmEmail","setFirmEmail","successMessage","setSuccessMessage","errorMessage","setErrorMessage","_jsxs","children","_jsx","AdminSidebar","className","AdminHeader","Row","Col","xs","md","lg","style","borderColor","marginLeft","src","AllFirms_logo","width","height","alt","Link","to","Button","id","Form","FormGroup","controlId","FormControl","type","placeholder","value","onChange","e","target","disabled","onClick","create_firm","async","data","axios","post","concat","error","console","log","APIAdmin","firm_name","firm_email","firm_gstno","firm_address","firm_status","then","response","setTimeout","window","location","reload","catch"],"sourceRoot":""}