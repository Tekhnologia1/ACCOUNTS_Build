{"version":3,"file":"static/js/352.e54c7b9b.chunk.js","mappings":"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","sources":["views/admin/Users/All_Users.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\r\nimport {\r\n  CButton, CCard, CCol, CImage, CRow, CTable, CTableBody, CTableDataCell,\r\n  CTableHead, CTableHeaderCell, CTableRow, CModal, CModalBody, CModalFooter,\r\n  CModalHeader, CModalTitle, CForm, CFormLabel, CFormInput, CFormSelect\r\n} from '@coreui/react';\r\nimport { AdminHeader, AdminSidebar } from 'src/components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from 'src/context/UserContextProvider';\r\n\r\nconst USERS_ADDED_BY_USER_API_URL = userId => `http://13.233.105.76:3007/api/users/users_added_by_user/${userId}`;\r\nconst TOTAL_BALANCE_OF_USER_API_URL = userId => `http://13.233.105.76:3007/api/users/total_bal_of_all_firms/${userId}`;\r\nconst USER_DETAILS_API_URL = user_id => `http://13.233.105.76:3007/api/users/user_details/${user_id}`;\r\nconst UPDATE_USER_DETAILS_API_URL = user_id => `http://13.233.105.76:3007/api/users/update_user_details/${user_id}`;\r\nconst UPDATE_FIRM_USER_API_URL = uf_id => `http://13.233.105.76:3007/api/users/update_firm_user/${uf_id}`;\r\nconst DELETE_FIRM_USER_API_URL = uf_id => `http://13.233.105.76:3007/api/users/delete_firm_user/${uf_id}`;\r\n\r\nconst All_Users = () => {\r\n  const { user } = useContext(UserContext);\r\n  const userId = user.userId;\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    contact: '',\r\n    address: '',\r\n    status: '',\r\n    role: '',\r\n    firmId: ''\r\n  });\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch(USERS_ADDED_BY_USER_API_URL(userId));\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const usersWithBalance = await Promise.all(data.data.map(async (user) => {\r\n          const balanceResponse = await fetch(TOTAL_BALANCE_OF_USER_API_URL(user.user_id));\r\n          const balanceData = await balanceResponse.json();\r\n          return { ...user, currbal: balanceData.data };\r\n        }));\r\n        setUsers(usersWithBalance);\r\n      } else {\r\n        console.error('Failed to fetch users');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    if (!modalVisible) {\r\n      setSuccessMessage('');\r\n      setErrorMessage('');\r\n    }\r\n  }, [userId, modalVisible]);\r\n\r\n  const fetchUserDetails = async (user) => {\r\n    console.log(\"Fetching user details for:\", user);\r\n    try {\r\n      const response = await fetch(USER_DETAILS_API_URL(user.user_id));\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"User details:\", data);\r\n        setFormData({\r\n          name: data.data.usr_name,\r\n          email: data.data.usr_email,\r\n          password: '',\r\n          contact: data.data.usr_contact || '',\r\n          address: data.data.usr_address,\r\n          status: data.data.usr_status === 'Active' ? '1' : '0',\r\n          role: data.data.usr_role,\r\n          firmId: user.firm_name\r\n        });\r\n        setSelectedUser(user);\r\n        setModalVisible(true);\r\n      } else {\r\n        console.error('Failed to fetch user details');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user details:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const updateUserResponse = await fetch(UPDATE_USER_DETAILS_API_URL(selectedUser.user_id), {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          name: formData.name,\r\n          email: formData.email,\r\n          password: formData.password,\r\n          contact: formData.contact,\r\n          address: formData.address,\r\n          status: '1',\r\n          role: '2'\r\n        })\r\n      });\r\n\r\n      const updateFirmResponse = await fetch(UPDATE_FIRM_USER_API_URL(selectedUser.uf_id), {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user_id: selectedUser.user_id, firm_id: formData.firmId })\r\n      });\r\n\r\n      if (updateUserResponse.ok && updateFirmResponse.ok) {\r\n        setSuccessMessage('User details updated successfully !!');\r\n        setModalVisible(false);\r\n        setLoading(true);\r\n        fetchUsers();\r\n      } else {\r\n        setErrorMessage('Something went wrong !!');\r\n        console.error('Failed to update user details or firm');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating user details or firm:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteModalOpen = (user) => {\r\n    setSelectedUser(user);\r\n    setDeleteModalVisible(true);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await fetch(DELETE_FIRM_USER_API_URL(selectedUser.uf_id), {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      if (response.ok) {\r\n        // setSuccessMessage('User deleted successfully !!');\r\n        setDeleteModalVisible(false);\r\n        setLoading(true);\r\n        fetchUsers();\r\n      } else {\r\n        setErrorMessage('Failed to delete user !!');\r\n        console.error('Failed to delete user');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting user:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AdminSidebar />\r\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\r\n        <AdminHeader />\r\n        <div className=\"body flex-grow-1 px-5\">\r\n          <>\r\n            <CRow className='justify-content-center mb-3'>\r\n              <CCol className='col-md-12'>\r\n                <CCard className='card_border_color_change py-5' style={{ borderColor: \"white\" }}>\r\n                  <CRow className='allfirms_title_mainrow'>\r\n                    <CCol className='col-md-9' style={{ marginLeft: \"10px\" }}>\r\n                      <CRow className='allfirms_title_row py-1 align-items-center'>\r\n                        <CCol className='col-md-1'>\r\n                          <CImage className='' src={AllFirms_logo} width={25} height={25} />\r\n                        </CCol>\r\n                        <CCol className='col-md-2'>\r\n                          <h4>All Users</h4>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCol>\r\n                    <CCol className='col-md-2 align-content-center justify-content-end'>\r\n                      <Link to={'/add_users'}>\r\n                        <CButton id=\"but_color\">Add New User</CButton>\r\n                      </Link>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <CRow className='allfirms_table_row py-5'>\r\n                    <CTable hover responsive className=\"custom-table\">\r\n                      <CTableHead className=\"custom-table-header\">\r\n                        <CTableRow>\r\n                          <CTableHeaderCell id='sss'>Sr. No.</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Name</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Address</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Email Id</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Status</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Assigned Firm</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Curr. Balance</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Action</CTableHeaderCell>\r\n                          <CTableHeaderCell id='sss'>Details</CTableHeaderCell>\r\n                        </CTableRow>\r\n                      </CTableHead>\r\n                      <CTableBody>\r\n                        {users.map((user, index) => (\r\n                          <CTableRow key={user.user_id}>\r\n                            <CTableDataCell>{index + 1}</CTableDataCell>\r\n                            <CTableDataCell>{user.usr_name}</CTableDataCell>\r\n                            <CTableDataCell>{user.usr_address}</CTableDataCell>\r\n                            <CTableDataCell>{user.usr_email}</CTableDataCell>\r\n                            <CTableDataCell>{user.usr_status}</CTableDataCell>\r\n                            <CTableDataCell>{user.firm_name}</CTableDataCell>\r\n                            <CTableDataCell>{user.currbal}</CTableDataCell>\r\n                            <CTableDataCell>\r\n                              <CButton color=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => fetchUserDetails(user)}>Edit</CButton>\r\n                              <CButton color=\"danger\" size=\"sm\" onClick={() => handleDeleteModalOpen(user)}>Delete</CButton>\r\n                            </CTableDataCell>\r\n                            <CTableDataCell>\r\n                              <CButton color=\"info\" size=\"sm\" onClick={() => fetchUserDetails(user)}>View</CButton>\r\n                            </CTableDataCell>\r\n                          </CTableRow>\r\n                        ))}\r\n                      </CTableBody>\r\n                    </CTable>\r\n                  </CRow>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        </div>\r\n      </div>\r\n\r\n      <CModal visible={modalVisible} onClose={() => setModalVisible(false)}>\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Edit User</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CForm>\r\n            <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n              <CFormInput id=\"name\" value={formData.name} onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"email\">Email</CFormLabel>\r\n              <CFormInput id=\"email\" type=\"email\" value={formData.email} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"password\">Password</CFormLabel>\r\n              <CFormInput id=\"password\" type=\"password\" value={formData.password} onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"contact\">Contact</CFormLabel>\r\n              <CFormInput id=\"contact\" value={formData.contact} onChange={(e) => setFormData({ ...formData, contact: e.target.value })} />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"address\">Address</CFormLabel>\r\n              <CFormInput id=\"address\" value={formData.address} onChange={(e) => setFormData({ ...formData, address: e.target.value })} />\r\n            </div>\r\n            {/* <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"status\">Status</CFormLabel>\r\n              <CFormSelect id=\"status\" value={formData.status} onChange={(e) => setFormData({ ...formData, status: e.target.value })}>\r\n                <option value=\"1\">Active</option>\r\n                <option value=\"0\">Inactive</option>\r\n              </CFormSelect>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"role\">Role</CFormLabel>\r\n              <CFormSelect id=\"role\" value={formData.role} onChange={(e) => setFormData({ ...formData, role: e.target.value })}>\r\n                <option value=\"1\">Admin</option>\r\n                <option value=\"2\">User</option>\r\n              </CFormSelect>\r\n            </div> */}\r\n            <div className=\"mb-3\">\r\n              <CFormLabel htmlFor=\"firmId\">Assigned Firm</CFormLabel>\r\n              <CFormInput id=\"firmId\" value={formData.firmId} onChange={(e) => setFormData({ ...formData, firmId: e.target.value })} />\r\n            </div>\r\n          </CForm>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"primary\" onClick={handleUpdate}>Save</CButton>\r\n          <CButton color=\"secondary\" onClick={() => setModalVisible(false)}>Cancel</CButton>\r\n          {errorMessage && <div className=\"text-danger mt-2 text-center\">{errorMessage}</div>}\r\n          {successMessage && <div className=\"text-success mt-2 text-center\">{successMessage}</div>}\r\n        </CModalFooter>\r\n      </CModal>\r\n\r\n      <CModal visible={deleteModalVisible} onClose={() => setDeleteModalVisible(false)}>\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>{selectedUser ? `Delete User ${selectedUser.usr_name}` : ''}</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          {selectedUser && (\r\n            <p>Are you sure you want to delete user {selectedUser.usr_name}?</p>\r\n          )}\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton color=\"danger\" onClick={handleDelete}>Delete</CButton>\r\n          <CButton color=\"secondary\" onClick={() => setDeleteModalVisible(false)}>Cancel</CButton>\r\n          {/* {errorMessage && <div className=\"text-danger mt-2 text-center\">{errorMessage}</div>}\r\n          {successMessage && <div className=\"text-success mt-2 text-center\">{successMessage}</div>} */}\r\n        </CModalFooter>\r\n      </CModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default All_Users;"],"names":["All_Users","user","useContext","UserContext","userId","users","setUsers","useState","loading","setLoading","selectedUser","setSelectedUser","modalVisible","setModalVisible","deleteModalVisible","setDeleteModalVisible","successMessage","setSuccessMessage","errorMessage","setErrorMessage","formData","setFormData","name","email","password","contact","address","status","role","firmId","fetchUsers","async","response","fetch","concat","USERS_ADDED_BY_USER_API_URL","ok","data","json","usersWithBalance","Promise","all","map","balanceResponse","TOTAL_BALANCE_OF_USER_API_URL","user_id","balanceData","currbal","console","error","useEffect","fetchUserDetails","log","usr_name","usr_email","usr_contact","usr_address","usr_status","usr_role","firm_name","_jsx","children","_jsxs","AdminSidebar","className","AdminHeader","_Fragment","CRow","CCol","CCard","style","borderColor","marginLeft","CImage","src","AllFirms_logo","width","height","Link","to","CButton","id","CTable","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","index","CTableDataCell","color","size","onClick","handleDeleteModalOpen","CModal","visible","onClose","CModalHeader","closeButton","CModalTitle","CModalBody","CForm","CFormLabel","htmlFor","CFormInput","value","onChange","e","target","type","CModalFooter","updateUserResponse","method","headers","body","JSON","stringify","updateFirmResponse","uf_id","firm_id"],"sourceRoot":""}