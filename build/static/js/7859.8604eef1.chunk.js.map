{"version":3,"file":"static/js/7859.8604eef1.chunk.js","mappings":"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","sources":["api/APIRegister.js","api/APIURL.js","auth/AuthUser.js","../node_modules/jwt-decode/build/esm/index.js","views/pages/login/Login.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\n\nimport { api_url } from 'src/api/APIURL';\n\n\n\nconst APIRegister = () => {\n\n  //User_Reg\n  const REGISTER = async (data) => {\n    try {\n      const response = await axios.post(`${api_url}/api/users/register`, data);\n      return response.data;\n    } catch (error) {\n      console.log('Error registering:', error);\n      throw error;\n    }\n  };\n\n  // User_Login\n  const LOGIN = async (data) => {\n    try {\n      const response = await axios.post(`${api_url}/api/users/login`, data);\n      return response.data;\n    } catch (error) {\n      console.log('Invalid credentials:', error);\n      throw error;\n    }\n  };\n\n  // //User_Reset_Pass\n  // const RESET_PASS = async (data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Reset_Password/${data.mobileNo}`, { newPassword: data.newPassword });\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Can't reset password:\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n  // //Fill_ORG_Details\n  // // http://192.168.1.69:3002/Add_Institute/231     :userId\n  // const ORG_DETAILS = async (userId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Institute/${userId}`, data);\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add details\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n  // //ADD_SCHOOL_OR_BRANCH\n  // // http://192.168.1.69:3002/Add_Branch/231/4    :userId/instituteId\n  // const ADD_SCHOOL_OR_BRANCH = async (userId, instituteId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Branch/${userId}/${instituteId}`, data);\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add branch:\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n\n  // //REG_SCHOOL_OR_BRANCH-------//Add School details by Principal\n  // // http://192.168.1.69:3002/Register_Branch/2     :userId\n  // const REG_SCHOOL_OR_BRANCH = async (userId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Register_Branch/${userId}`, data);\n\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add details:\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n  // //Add_Individual_Personal_Details\n  // // http://192.168.1.69:3002/Add_Info_Indivisual/249   :userId\n  // const ADD_INDIV_PERSO = async (userId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Info_Indivisual/${userId}`, data);\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add details:\", error);\n  //     throw error;\n  //   }\n  // };\n\n  return { REGISTER, LOGIN };\n}\n\nexport { APIRegister };","export const api_url = 'http://15.206.84.226:3007';","\r\n\r\nimport axios from 'axios';\r\n\r\nconst http = axios.create({\r\n  // baseURL: 'http://192.168.1.1:3005',\r\n  baseURL: 'http://192.168.1.69:3002',\r\n});\r\n\r\nclass Auth {\r\n  static isAuthenticated() {\r\n    const token = localStorage.getItem('token');\r\n    return token !== null;\r\n  }\r\n\r\n  // static getUserRole() {\r\n  //   return localStorage.getItem('userRole');\r\n  // }\r\n\r\n  // static getUserId() {\r\n  //   return localStorage.getItem('userId');\r\n  // }\r\n\r\n  // static getSchoolIds() {\r\n  //   return localStorage.getItem('schoolId');\r\n  // }\r\n\r\n  static login(token) {\r\n    localStorage.setItem('token', token);\r\n    // localStorage.setItem('userRole', userRole);\r\n    // localStorage.setItem('userId', userId);\r\n  }\r\n\r\n  static logout() {\r\n    localStorage.removeItem('token');\r\n    // localStorage.removeItem('userRole');\r\n  }\r\n\r\n  static getUserData() {\r\n    return localStorage.getItem('user');\r\n  }\r\n}\r\n\r\nexport { Auth, http };\r\n\r\n","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  Row,\n  InputGroup\n} from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Auth, http } from 'src/auth/AuthUser';\nimport { APIRegister } from 'src/api/APIRegister';\nimport { jwtDecode } from 'jwt-decode';\nimport { UserContext } from 'src/context/UserContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Login = () => {\n  const { user, setUser } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // const [emailError, setEmailError] = useState('');\n  // const [passwordError, setPasswordError] = useState('');\n\n  useEffect(() => {\n    console.log(user.userId); // Log userId whenever user state changes\n  }, [user]);\n\n  const validateEmail = (email) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  // const validatePassword = (password) => {\n  //   // Example password validation: At least 6 characters, at least one letter and one number\n  //   const re = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\n  //   return re.test(String(password));\n  // };\n\n  const login = () => {\n    if (!validateEmail(email)) {\n      setErrorMessage('Invalid email');\n      return;\n    }\n\n    // if (!validatePassword(password)) {\n    //   setErrorMessage('Password must be at least 6 characters long and contain at least one letter and one number');\n    //   return;\n    // }\n\n    APIRegister().LOGIN({\n      email: email,\n      password: password,\n    }).then((response) => {\n      console.log(response);\n      const token = response.data.token;\n      console.log(response);\n      const userdata = jwtDecode(token);\n      console.log(userdata);\n\n      setUser(prevState => ({\n        ...prevState,\n        userId: userdata.userId,\n        email: userdata.email,\n        role: userdata.role\n      }));\n\n      if (response.status && response.message === 'Login successful') {\n        setSuccessMessage('Logged in successfully!');\n        Auth.login(token);\n\n        if (userdata.role === 'firm_user') {\n          navigate('/firm_user_dash');\n        } else {\n          navigate('/super_admin_dash');\n        }\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n\n      } else {\n        // Handling unexpected success responses\n        setErrorMessage('Unexpected response from server');\n        setSuccessMessage('');\n      }\n\n    }).catch((error) => {\n      console.error(\"Some error, solve it: \", error);\n      // Handling specific backend errors\n      if (error.response && error.response.data) {\n        const errorMessage = error.response.data.message;\n        if (errorMessage === 'Email and password are required') {\n          setErrorMessage('All fields are required');\n        } else {\n          setErrorMessage('Invalid credentials');\n        }\n      } else {\n        setErrorMessage('Something went wrong !!');\n      }\n      setSuccessMessage('');\n    });\n  };\n\n  return (\n    <div className=\"login_background\">\n      <Container className=\"d-flex justify-content-center mt-5\">\n        <Row className=\"w-100\">\n          <Col md={5} className=\"mx-auto\">\n            <Card className='p-5' id='card_border_color_change' style={{ boxShadow: \"4px 4px 60px rgb(61, 61, 61)\" }}>\n              <Form className=\"row g-3 needs-validation\" noValidate>\n                <h1 className='text-center defaultcolor'>Log In</h1>\n                <InputGroup className=\"mb-2\">\n                  <Form.Control\n                    className='input_fields'\n                    onChange={(e) => setEmail(e.target.value)}\n                    style={{ borderRadius: '8px' }}\n                    type=\"email\"\n                    placeholder='Email address'\n                  />\n                </InputGroup>\n                <InputGroup className=\"mb-4\">\n                  <Form.Control\n                    className='input_fields'\n                    onChange={(e) => setPassword(e.target.value)}\n                    style={{ borderRadius: '8px' }}\n                    type=\"password\"\n                    placeholder='Password'\n                  />\n                </InputGroup>\n                <Row>\n                  <Col xs={12} className='text-center'>\n                    <Button onClick={login} className=\"px-4\" id='but_color' type='button'>\n                      Log in\n                    </Button>\n                    {errorMessage && <div className=\"text-danger\">{errorMessage}</div>}\n                    {successMessage && <div className=\"text-success\">{successMessage}</div>}\n                  </Col>\n                </Row>\n                <Row className=\"mt-3\">\n                  <Col className=\"text-center\">\n                    <Link to={'/signup'}>\n                      <Button className=\"px-4\" id='but_color'>\n                        New User ? Signup\n                      </Button>\n                    </Link>\n                  </Col>\n                </Row>\n                <br />\n              </Form>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["APIRegister","REGISTER","async","axios","post","concat","api_url","data","error","console","log","LOGIN","create","baseURL","Auth","isAuthenticated","localStorage","getItem","login","token","setItem","logout","removeItem","getUserData","InvalidTokenError","Error","base64UrlDecode","str","output","replace","length","decodeURIComponent","atob","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","prototype","name","Login","user","setUser","useContext","UserContext","navigate","useNavigate","email","setEmail","useState","password","setPassword","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","userId","_jsx","className","children","Container","Row","Col","md","Card","id","style","boxShadow","_jsxs","Form","noValidate","InputGroup","Control","onChange","e","target","value","borderRadius","type","placeholder","xs","Button","onClick","test","String","toLowerCase","validateEmail","then","response","userdata","options","pos","header","part","split","decoded","message","JSON","parse","jwtDecode","prevState","role","status","setTimeout","window","location","reload","catch","Link","to"],"sourceRoot":""}