{"version":3,"file":"static/js/852.4a338f08.chunk.js","mappings":"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","sources":["api/APIURL.js","views/firm_user/Receipts/User_AllReceipts.js"],"sourcesContent":["export const api_url = 'http://3.111.33.23:3007';","import React, { useState, useEffect, useContext } from 'react';\nimport { CButton, CCard, CCol, CImage, CRow } from '@coreui/react';\nimport { AdminHeader, AdminSidebar, FirmusrHeader, FirmusrSidebar } from 'src/components';\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\nimport { Col, Form, FormControl, FormGroup, Row, Card, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from 'src/context/UserContextProvider';\nimport { api_url } from 'src/api/APIURL';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst User_AllReceipts = () => {\n  const { user } = useContext(UserContext);\n  const userId = user.userId;\n  const [firms, setFirms] = useState([]);\n  const [selectedFirmId, setSelectedFirmId] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalBalance, setTotalBalance] = useState(null);\n  const [hasTransactions, setHasTransactions] = useState(true);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  useEffect(() => {\n    const fetchFirms = async () => {\n      try {\n        const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch firms');\n        }\n        const resdata = await response.json();\n        setFirms(resdata.data);\n      } catch (error) {\n        console.error('Error fetching firms:', error);\n      }\n    };\n    fetchFirms();\n  }, [userId]);\n\n  useEffect(() => {\n    fetchTransactions();\n  }, [selectedFirmId, startDate, endDate]);\n\n  useEffect(() => {\n    const fetchTotalBalance = async () => {\n      if (selectedFirmId) {\n        try {\n          const firm_id = selectedFirmId;\n          const response = await fetch(`${api_url}/api/users/firm_total_bal/${firm_id}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch total balance');\n          }\n          const resdata = await response.json();\n          setTotalBalance(resdata.data.totalBalance);\n        } catch (error) {\n          console.error('Error fetching total balance:', error);\n        }\n      }\n    };\n    fetchTotalBalance();\n  }, [selectedFirmId]);\n\n  const fetchTransactions = async () => {\n    if (selectedFirmId) {\n      setLoading(true);\n      try {\n        const to_firm_id = selectedFirmId;\n        let url = `${api_url}/api/users/show_receipt_transactions/${to_firm_id}`;\n\n        if (startDate) {\n          const formattedStartDate = startDate.toLocaleDateString('en-CA'); // Format as YYYY-MM-DD\n          url += `?startDate=${formattedStartDate}`;\n        }\n        if (endDate) {\n          const adjustedEndDate = new Date(endDate);\n          adjustedEndDate.setDate(adjustedEndDate.getDate() + 1);\n          const formattedEndDate = adjustedEndDate.toLocaleDateString('en-CA'); // Format as YYYY-MM-DD\n          url += startDate ? `&endDate=${formattedEndDate}` : `?endDate=${formattedEndDate}`;\n        }\n\n        const response = await fetch(url);\n        const resdata = await response.json();\n        if (!response.ok || resdata.status === false) {\n          setHasTransactions(false);\n          setTransactions([]);\n          return;\n        }\n        setTransactions(resdata.data);\n        setHasTransactions(resdata.data.length > 0);\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n        setHasTransactions(false);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <FirmusrSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <FirmusrHeader />\n        <div className=\"body flex-grow-1 px-5\">\n          <CRow className='justify-content-center mb-3'>\n            <CCol md={12}>\n              <CCard className='card_border_color_change py-3' style={{ borderColor: \"white\" }}>\n                <CRow className='allfirms_title_mainrow'>\n                  <CCol md={8} style={{ marginLeft: \"10px\" }}>\n                    <CRow className='allfirms_title_row py-1 align-items-center'>\n                      <CCol xs={1}>\n                        <CImage className='' src={AllFirms_logo} width={25} height={25} />\n                      </CCol>\n                      <CCol xs={4}>\n                        <h4>All Receipts</h4>\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                  <CCol md={3} className='align-items-center justify-content-end'>\n                    <Link to={'/user_createreceipt'}>\n                      <CButton id=\"but_color\">Create Receipt</CButton>\n                    </Link>\n                  </CCol>\n                </CRow>\n\n                <CRow className='allfirms_table_row py-3 justify-content-center'>\n                  <CCol>\n                    {/* <CRow className='justify-content-center'>\n                      <CCol md={2}>\n                        <Form>\n                          <FormGroup as={Row} className=\"mb-3\" controlId=\"formUserType\">\n                            <Col>\n                              <Form.Check\n                                type=\"radio\"\n                                label=\"Firm\"\n                                name=\"userType\"\n                                id=\"firm\"\n                                inline\n                                defaultChecked\n                              />\n                              <Form.Check\n                                type=\"radio\"\n                                label=\"User\"\n                                name=\"userType\"\n                                id=\"user\"\n                                inline\n                              />\n                            </Col>\n                          </FormGroup>\n                        </Form>\n                      </CCol>\n                    </CRow> */}\n                    <CRow className='justify-content-end mb-3'>\n                      <CCol md={8} className=\"justify-content-end justify-content-md-end\" style={{ paddingLeft: \"375px\" }}>\n                        <Form>\n                          <FormGroup as={Row} className=\"mb-3\">\n                            <Col md={11} className=\"justify-content-end justify-content-md-end\">\n                              {/* <Form.Label className=\"col-md-5 mb-0\">Select Firm</Form.Label> */}\n                              <FormControl\n                                as=\"select\"\n                                value={selectedFirmId}\n                                className=\"form-select\"\n                                onChange={(e) => setSelectedFirmId(e.target.value)}\n                                style={{ maxWidth: '100%' }}\n                              >\n                                <option value=\"\">Select Firm</option>\n                                {firms.map((firm) => (\n                                  <option key={firm.firm_id} value={firm.firm_id}>\n                                    {firm.firm_name}\n                                  </option>\n                                ))}\n                              </FormControl>\n                            </Col>\n                          </FormGroup>\n                        </Form>\n                      </CCol>\n\n                      <CCol md={4} className=\"d-flex align-items-center justify-content-center justify-content-md-end\">\n                        {totalBalance !== null && (\n                          <div style={{\n                            backgroundColor: 'green',\n                            color: 'white',\n                            padding: '8px',\n                            borderRadius: '5px',\n                            fontSize: '14px'\n                          }}>\n                            Firm Total Balance: {totalBalance}\n                          </div>\n                        )}\n                      </CCol>\n                    </CRow>\n\n                    <CRow className='justify-content-center mb-3'>\n                      <CCol md={6} className=\"d-flex justify-content-md-between\">\n                        <DatePicker\n                          selected={startDate}\n                          onChange={(date) => setStartDate(date)}\n                          selectsStart\n                          startDate={startDate}\n                          endDate={endDate}\n                          placeholderText=\"Start Date\"\n                          className=\"form-control\"\n                          md={3}\n                        />\n                        <DatePicker\n                          selected={endDate}\n                          onChange={(date) => setEndDate(date)}\n                          selectsEnd\n                          startDate={startDate}\n                          endDate={endDate}\n                          minDate={startDate}\n                          placeholderText=\"End Date\"\n                          className=\"form-control\"\n                          md={3}\n                        />\n                        <CButton onClick={fetchTransactions} id=\"but_color\" md={2}>Filter</CButton>\n                      </CCol>\n                    </CRow>\n\n                    <CRow>\n                      <Col md={12}>\n                        <Card className=\"mb-3\">\n                          <Card.Header className=\"text-white\" id='bg__color'>Receipt Transactions</Card.Header>\n                          <Card.Body>\n                            {loading ? (\n                              <p>Loading...</p>\n                            ) : !hasTransactions ? (\n                              <p>No Transactions for this firm</p>\n                            ) : (\n                              <Table striped bordered hover responsive>\n                                <thead>\n                                  <tr>\n                                    <th>Sr.No</th>\n                                    <th>To GL Name</th>\n                                    <th>From Firm & GL Name</th>\n                                    <th>Amount</th>\n                                    <th>Date</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {transactions.map((transaction, index) => (\n                                    <tr key={transaction.transaction_id}>\n                                      <td>{index + 1}</td>\n                                      <td>{transaction.to_gl_name}</td>\n                                      <td>{transaction.from_firm_name} - {transaction.from_gl_name}</td>\n                                      <td style={{ color: \"green\" }}>+{transaction.amount}</td>\n                                      <td>{new Date(transaction.transaction_date).toLocaleString()}</td>\n                                    </tr>\n                                  ))}\n                                </tbody>\n                              </Table>\n                            )}\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                    </CRow>\n                  </CCol>\n                </CRow>\n              </CCard>\n            </CCol>\n          </CRow>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default User_AllReceipts;\n"],"names":["api_url","User_AllReceipts","user","useContext","UserContext","userId","firms","setFirms","useState","selectedFirmId","setSelectedFirmId","transactions","setTransactions","loading","setLoading","totalBalance","setTotalBalance","hasTransactions","setHasTransactions","startDate","setStartDate","endDate","setEndDate","useEffect","async","response","fetch","concat","ok","Error","resdata","json","data","error","console","fetchFirms","fetchTransactions","firm_id","fetchTotalBalance","to_firm_id","url","formattedStartDate","toLocaleDateString","adjustedEndDate","Date","setDate","getDate","formattedEndDate","status","length","_jsxs","children","_jsx","FirmusrSidebar","className","FirmusrHeader","CRow","CCol","md","CCard","style","borderColor","marginLeft","xs","CImage","src","AllFirms_logo","width","height","Link","to","CButton","id","paddingLeft","Form","FormGroup","as","Row","Col","FormControl","value","onChange","e","target","maxWidth","map","firm","firm_name","backgroundColor","color","padding","borderRadius","fontSize","DatePicker","selected","date","selectsStart","placeholderText","selectsEnd","minDate","onClick","Card","Header","Body","Table","striped","bordered","hover","responsive","transaction","index","to_gl_name","from_firm_name","from_gl_name","amount","transaction_date","toLocaleString","transaction_id"],"sourceRoot":""}