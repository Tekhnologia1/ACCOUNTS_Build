{"version":3,"file":"static/js/671.3df24f75.chunk.js","mappings":"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","sources":["views/admin/Users/Add_Users.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { AdminHeader, AdminSidebar } from 'src/components';\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\nimport { Form, FormControl, FormGroup, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from 'src/context/UserContextProvider';\nimport 'src/scss/_custom.scss';\n\nconst ADD_USER_API_URL = 'http://13.126.48.224:3007/api/users/add_user';\nconst ASSIGN_FIRM_API_URL = 'http://13.126.48.224:3007/api/users/assign_firm_to_user';\n\nconst Add_Users = () => {\n  const { user } = useContext(UserContext);\n  const userId = user.userId;\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [contact, setContact] = useState('');\n  const [address, setAddress] = useState('');\n  const status = \"1\"; // Hardcoded status\n  const role = \"2\"; // Assuming '2' is the role for the user being added\n  const [selectedFirmId, setSelectedFirmId] = useState('');\n  const [firms, setFirms] = useState([]);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Fetch firms for the dropdown\n  useEffect(() => {\n    const fetchFirms = async () => {\n      try {\n        const response = await fetch(`http://13.126.48.224:3007/api/users/get_all_firms_by_user/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const resdata = await response.json();\n        console.log(resdata.data);\n\n        setFirms(resdata.data);\n      } catch (error) {\n        console.error('Error fetching firms:', error);\n      }\n    };\n\n    fetchFirms();\n  }, [userId]);\n\n  const handleAddUser = async () => {\n    try {\n      const response = await fetch(ADD_USER_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          contact,\n          address,\n          status,\n          role\n        }),\n      });\n\n      if (response.ok) {\n        const newUser = await response.json();\n        await assignFirmToUser(newUser.data);\n        setSuccessMessage('User added successfully!');\n        setErrorMessage('');\n        setTimeout(() => {\n          window.location.reload();\n      }, 1000);\n      } else {\n        throw new Error('Failed to add user');\n      }\n    } catch (error) {\n      console.error('Error adding user:', error);\n      setErrorMessage('Failed to add user. Please try again.');\n      setSuccessMessage('');\n      setTimeout(() => {\n        window.location.reload();\n    }, 1000);\n    }\n  };\n\n  const assignFirmToUser = async (added_user_id) => {\n    try {\n      const response = await fetch(ASSIGN_FIRM_API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          user_id: added_user_id,\n          firm_id: selectedFirmId,\n          added_by_user_id: userId\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to assign firm to user');\n      } else {\n        setSuccessMessage('User is added with assigned firm !!');\n      }\n    } catch (error) {\n      console.error('Error assigning firm to user:', error);\n      setErrorMessage('Failed to assign firm. Please try again.');\n      setSuccessMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <AdminSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AdminHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <>\n            <Row className=\"justify-content-center mb-3\">\n              <Col xs={12}>\n                <div className=\"card_border_color_change py-5\" style={{ borderColor: \"white\" }}>\n                  <Row className=\"allfirms_title_mainrow\">\n                    <Col xs={9} style={{ marginLeft: \"10px\" }}>\n                      <Row className=\"allfirms_title_row py-1 align-items-center\">\n                        <Col xs={1}>\n                          <img src={AllFirms_logo} width={25} height={25} alt=\"All Firms Logo\" />\n                        </Col>\n                        <Col xs={4}>\n                          <h4>Add Users</h4>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col xs={2} className=\"align-content-center justify-content-end\">\n                      <Link to={'/all_users'}>\n                        <Button id=\"but_color\">\n                          All Users\n                        </Button>\n                      </Link>\n                    </Col>\n                  </Row>\n\n                  <Row className=\"allfirms_table_row py-5 justify-content-center\">\n                    <Col xs={12} md={6}>\n                      <Form>\n                        <FormGroup className=\"mb-3\" controlId=\"formName\">\n                          <FormControl\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                          />\n                        </FormGroup>\n\n                        <FormGroup className=\"mb-3\" controlId=\"formEmail\">\n                          <FormControl\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                          />\n                        </FormGroup>\n\n                        <FormGroup className=\"mb-3\" controlId=\"formPassword\">\n                          <FormControl\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                          />\n                        </FormGroup>\n\n                        <FormGroup className=\"mb-3\" controlId=\"formContact\">\n                          <FormControl\n                            type=\"text\"\n                            placeholder=\"Contact\"\n                            value={contact}\n                            onChange={(e) => setContact(e.target.value)}\n                          />\n                        </FormGroup>\n\n                        <FormGroup className=\"mb-3\" controlId=\"formAddress\">\n                          <FormControl\n                            type=\"text\"\n                            placeholder=\"Address\"\n                            value={address}\n                            onChange={(e) => setAddress(e.target.value)}\n                          />\n                        </FormGroup>\n\n                        <FormGroup className=\"mb-3\" controlId=\"formStatus\">\n                          <FormControl\n                            type=\"text\"\n                            placeholder=\"Status\"\n                            disabled\n                            value=\"Active\"\n                          />\n                        </FormGroup>\n\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"formFirmName\">\n                          <Form.Label column sm={3}>Firm Name</Form.Label>\n                          <Col sm={9}>\n                            <Form.Control as=\"select\" value={selectedFirmId} className='form-select' onChange={(e) => setSelectedFirmId(e.target.value)}>\n                              <option value=\"\">Select Firm</option>\n                              {firms.map((firm) => (\n                                <option key={firm.firm_id} value={firm.firm_id}>\n                                  {firm.firm_name}\n                                </option>\n                              ))}\n                            </Form.Control>\n                          </Col>\n                        </Form.Group>\n\n                        <Row className=\"justify-content-center align-content-center\">\n                          <Button onClick={handleAddUser} className='col-md-3' id='but_color'>Save</Button>\n                          {errorMessage && <div className=\"text-danger mt-2 text-center\">{errorMessage}</div>}\n                          {successMessage && <div className=\"text-success mt-2 text-center\">{successMessage}</div>}\n                        </Row>\n                      </Form>\n                    </Col>\n                  </Row>\n                </div>\n              </Col>\n            </Row>\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Add_Users;\n"],"names":["Add_Users","user","useContext","UserContext","userId","name","setName","useState","email","setEmail","password","setPassword","contact","setContact","address","setAddress","selectedFirmId","setSelectedFirmId","firms","setFirms","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","async","response","fetch","concat","ok","Error","resdata","json","console","log","data","error","fetchFirms","assignFirmToUser","method","headers","body","JSON","stringify","user_id","added_user_id","firm_id","added_by_user_id","_jsxs","children","_jsx","AdminSidebar","className","AdminHeader","_Fragment","Row","Col","xs","style","borderColor","marginLeft","src","AllFirms_logo","width","height","alt","Link","to","Button","id","md","Form","FormGroup","controlId","FormControl","type","placeholder","value","onChange","e","target","disabled","Group","as","Label","column","sm","Control","map","firm","firm_name","onClick","status","role","newUser","setTimeout","window","location","reload"],"sourceRoot":""}