{"version":3,"file":"static/js/5962.45457244.chunk.js","mappings":"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","sources":["api/APIURL.js","views/firm_user/Ledgers/User_Ledgers.js"],"sourcesContent":["export const api_url = 'http://20.235.178.6:3007';","import React, { useContext, useEffect, useState } from 'react';\r\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CImage,\r\n  CCol,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow\r\n} from '@coreui/react';\r\nimport { AdminHeader, AdminSidebar, FirmusrHeader, FirmusrSidebar } from 'src/components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Row, Col, Modal } from 'react-bootstrap';\r\nimport { UserContext } from 'src/context/UserContextProvider';\r\nimport axios from 'axios';\r\nimport { api_url } from 'src/api/APIURL';\r\nimport Firm_acc from 'src/assets/icons/sidebar_icons/Firm_acc.png'\r\n\r\n\r\nconst User_Ledgers = () => {\r\n  const { user } = useContext(UserContext);\r\n  const userId = user.userId;\r\n  const [firms, setFirms] = useState([]);\r\n  const [selectedFirmId, setSelectedFirmId] = useState('');\r\n  const [firmsData, setFirmsData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editData, setEditData] = useState({ gl_id: '', gl_name: '', gl_status: '' });\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [firmToDelete, setFirmToDelete] = useState(null);\r\n  const [totalBalance, setTotalBalance] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchFirms = async () => {\r\n      try {\r\n        const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const resdata = await response.json();\r\n        setFirms(resdata.data);\r\n      } catch (error) {\r\n        console.error('Error fetching firms:', error);\r\n      }\r\n    };\r\n\r\n    fetchFirms();\r\n  }, [userId]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchTotalBalance = async () => {\r\n      if (selectedFirmId) {\r\n        try {\r\n          const firm_id = selectedFirmId;\r\n          const response = await fetch(`${api_url}/api/users/firm_total_bal/${firm_id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch total balance');\r\n          }\r\n          const resdata = await response.json();\r\n          setTotalBalance(resdata.data.totalBalance);\r\n        } catch (error) {\r\n          console.error('Error fetching total balance:', error);\r\n        }\r\n      }\r\n    };\r\n    fetchTotalBalance();\r\n  }, [selectedFirmId]);\r\n\r\n  const fetchData = async (firm_id) => {\r\n    try {\r\n      const response = await fetch(`${api_url}/api/users/get_general_ledgers/${firm_id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch data');\r\n      }\r\n      const data = await response.json();\r\n      setFirmsData(data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedFirmId) {\r\n      fetchData(selectedFirmId);\r\n    }\r\n  }, [selectedFirmId]);\r\n\r\n  const updateLedgData = async (firm_id, gl_id, data) => {\r\n    try {\r\n      const response = await axios.put(`${api_url}/api/users/update_general_ledgers/${firm_id}/${gl_id}`, data);\r\n      if (response.status !== 200) {\r\n        throw new Error('Failed to update data');\r\n      }\r\n      alert(response.data.message);\r\n      setShowModal(false);\r\n      fetchData(firm_id);\r\n    } catch (error) {\r\n      console.error('Error updating data:', error);\r\n    }\r\n  };\r\n\r\n  const deleteLedgData = async () => {\r\n    if (!firmToDelete) return;\r\n\r\n    const { firm_id, gl_id } = firmToDelete;\r\n\r\n    try {\r\n      const response = await axios.delete(`${api_url}/api/users/delete_general_ledgers/${firm_id}/${gl_id}`);\r\n      if (response.status !== 200) {\r\n        throw new Error('Failed to delete data');\r\n      }\r\n      // alert(response.data.message);\r\n      setShowDeleteModal(false);\r\n      fetchData(firm_id);\r\n    } catch (error) {\r\n      console.error('Error deleting data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (firm) => {\r\n    setEditData(firm);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleDelete = (firm) => {\r\n    setFirmToDelete(firm);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateLedgData(selectedFirmId, editData.gl_id, { gl_name: editData.gl_name, gl_status: editData.gl_status });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FirmusrSidebar />\r\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\r\n        <FirmusrHeader />\r\n        <div className=\"body flex-grow-1 px-3\">\r\n          <CRow className='justify-content-center mb-3'>\r\n            <CCol md={12}>\r\n              <CCard className='card_border_color_change py-5' style={{ borderColor: \"white\" }}>\r\n                <CRow className='align-items-center'>\r\n                  <CCol style={{ marginLeft: \"11px\" }}>\r\n                    <CRow className='allfirms_icon_title_row align-items-center'>\r\n                      <CCol className='col-2 col-md-1'>\r\n                        <img className='sidebar_icon_color' src={Firm_acc} width={25} height={25} alt=\"All Firms Logo\" />\r\n                      </CCol>\r\n                      <CCol className='col-7 col-md-7'>\r\n                        <h5 className=\"title_font mb-0\" style={{ color: 'white' }}>Firm Accounts</h5>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                  <CCol className=\"col-4 facc_crea_but_col\">\r\n                    <Link to={'/user_create_ledger'}>\r\n                      <CButton id=\"but_color\" className='m-0'>Create</CButton>\r\n                    </Link>\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className='allfirms_table_row py-5 justify-content-center'>\r\n                  <CCol>\r\n                    <CRow className='justify-content-center mb-3'>\r\n                      <CCol className=\"justify-content-start justify-content-md-start facc_sel_firm_col\">\r\n                        <Form.Group as={Row} className=\"mb-3\" controlId=\"formFirmName\">\r\n                          <Col md={11} className=\"justify-content-start justify-content-md-start\">\r\n                            {/* <Form.Label column sm={2}>Firm Name</Form.Label> */}\r\n\r\n                            <Form.Control as=\"select\" value={selectedFirmId} className='form-select' onChange={(e) => setSelectedFirmId(e.target.value)}>\r\n                              <option value=\"\">Select Firm</option>\r\n                              {firms.map((firm) => (\r\n                                <option key={firm.firm_id} value={firm.firm_id}>\r\n                                  {firm.firm_name}\r\n                                </option>\r\n                              ))}\r\n                            </Form.Control>\r\n                          </Col>\r\n                        </Form.Group>\r\n                      </CCol>\r\n                      <CCol className=\"d-flex align-items-center justify-content-center justify-content-md-end mt-0 mt-md-0 facc_f_bal\">\r\n                        {totalBalance !== null && (\r\n                          <div style={{\r\n                            backgroundColor: 'green',\r\n                            color: 'white',\r\n                            padding: '10px',\r\n                            borderRadius: '5px'\r\n                          }}>\r\n                            Firm Total Balance: {totalBalance}\r\n                          </div>\r\n                        )}\r\n                      </CCol>\r\n                    </CRow>\r\n\r\n\r\n\r\n\r\n\r\n                    <CRow className='justify-content-center'>\r\n                      <Col md={12}>\r\n                        <CTable hover responsive className=\"custom-table\">\r\n                          <CTableHead className=\"custom-table-header\">\r\n                            <CTableRow>\r\n                              <CTableHeaderCell>Sr. No.</CTableHeaderCell>\r\n                              <CTableHeaderCell>Firm Account Name</CTableHeaderCell>\r\n                              <CTableHeaderCell>Status</CTableHeaderCell>\r\n                              <CTableHeaderCell>Curr. Balance</CTableHeaderCell>\r\n                              <CTableHeaderCell>Action</CTableHeaderCell>\r\n                            </CTableRow>\r\n                          </CTableHead>\r\n                          <CTableBody>\r\n                            {firmsData.map((firm, index) => (\r\n                              <CTableRow key={index}>\r\n                                <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                <CTableDataCell>{firm.gl_name}</CTableDataCell>\r\n                                <CTableDataCell>{firm.gl_status}</CTableDataCell>\r\n                                <CTableDataCell>{firm.balance}</CTableDataCell>\r\n                                <CTableDataCell>\r\n                                  <CButton color=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => handleEdit(firm)}>Edit</CButton>\r\n                                  <CButton color=\"danger\" size=\"sm\" onClick={() => handleDelete({ firm_id: selectedFirmId, gl_id: firm.gl_id })}>Delete</CButton>\r\n                                </CTableDataCell>\r\n                              </CTableRow>\r\n                            ))}\r\n                          </CTableBody>\r\n                        </CTable>\r\n                      </Col>\r\n                    </CRow>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit General Ledger</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formGLName\">\r\n              <Form.Label>Gen Ledger Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editData.gl_name}\r\n                onChange={(e) => setEditData({ ...editData, gl_name: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            {/* <Form.Group controlId=\"formGLStatus\" className=\"mt-3\">\r\n              <Form.Label>Status</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editData.gl_status}\r\n                onChange={(e) => setEditData({ ...editData, gl_status: e.target.value })}\r\n              />\r\n            </Form.Group> */}\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CButton color=\"secondary\" onClick={() => setShowModal(false)}>Close</CButton>\r\n          <CButton color=\"primary\" onClick={handleSave}>Save changes</CButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this ledger?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CButton color=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</CButton>\r\n          <CButton color=\"danger\" onClick={deleteLedgData}>Delete</CButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User_Ledgers;\r\n"],"names":["api_url","User_Ledgers","user","useContext","UserContext","userId","firms","setFirms","useState","selectedFirmId","setSelectedFirmId","firmsData","setFirmsData","showModal","setShowModal","editData","setEditData","gl_id","gl_name","gl_status","showDeleteModal","setShowDeleteModal","firmToDelete","setFirmToDelete","totalBalance","setTotalBalance","useEffect","async","response","fetch","concat","ok","Error","resdata","json","data","error","console","fetchFirms","firm_id","fetchTotalBalance","fetchData","_jsxs","children","_jsx","FirmusrSidebar","className","FirmusrHeader","CRow","CCol","md","CCard","style","borderColor","marginLeft","src","Firm_acc","width","height","alt","color","Link","to","CButton","id","Form","Group","as","Row","controlId","Col","Control","value","onChange","e","target","map","firm","firm_name","backgroundColor","padding","borderRadius","CTable","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","index","CTableDataCell","balance","size","onClick","handleEdit","handleDelete","Modal","show","onHide","Header","closeButton","Title","Body","Label","type","Footer","handleSave","axios","put","status","alert","message","updateLedgData","delete"],"sourceRoot":""}