{"version":3,"file":"static/js/9425.06d83943.chunk.js","mappings":"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","sources":["api/APIURL.js","views/admin/Reports/Firm_Transactions/Firm_Transactions.js"],"sourcesContent":["export const api_url = 'http://13.233.194.13:3007';","import React, { useState, useEffect, useContext } from 'react';\r\nimport { CButton, CCard, CCol, CImage, CRow } from '@coreui/react';\r\nimport { AdminHeader, AdminSidebar } from 'src/components';\r\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\r\nimport { Col, Form, FormControl, FormGroup, Row, Card, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from 'src/context/UserContextProvider';\r\nimport { api_url } from 'src/api/APIURL';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst Firm_Transactions = () => {\r\n  const { user } = useContext(UserContext);\r\n  const userId = user.userId;\r\n  const [firms, setFirms] = useState([]);\r\n  const [selectedFirmId, setSelectedFirmId] = useState('');\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalBalance, setTotalBalance] = useState(null);\r\n  const [hasTransactions, setHasTransactions] = useState(true);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFirms = async () => {\r\n      try {\r\n        const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch firms');\r\n        }\r\n        const resdata = await response.json();\r\n        setFirms(resdata.data);\r\n      } catch (error) {\r\n        console.error('Error fetching firms:', error);\r\n      }\r\n    };\r\n    fetchFirms();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    fetchTransactions();\r\n  }, [selectedFirmId, startDate, endDate]);\r\n\r\n  const fetchTransactions = async () => {\r\n    if (selectedFirmId) {\r\n      setLoading(true);\r\n      try {\r\n        const firm_id = selectedFirmId;\r\n        let url = `${api_url}/api/users/show_firm_all_transactions/${firm_id}/transactions`;\r\n\r\n        if (startDate) {\r\n          const formattedStartDate = startDate.toLocaleDateString('en-CA'); // Format as YYYY-MM-DD\r\n          url += `?startDate=${formattedStartDate}`;\r\n        }\r\n        if (endDate) {\r\n          const adjustedEndDate = new Date(endDate);\r\n          adjustedEndDate.setDate(adjustedEndDate.getDate() + 1);\r\n          const formattedEndDate = adjustedEndDate.toLocaleDateString('en-CA'); // Format as YYYY-MM-DD\r\n          url += startDate ? `&endDate=${formattedEndDate}` : `?endDate=${formattedEndDate}`;\r\n        }\r\n\r\n        const response = await fetch(url);\r\n        const resdata = await response.json();\r\n        if (!response.ok || resdata.status === false) {\r\n          setHasTransactions(false);\r\n          setTransactions([]);\r\n          return;\r\n        }\r\n        setTransactions(resdata.data);\r\n        setHasTransactions(resdata.data.length > 0);\r\n      } catch (error) {\r\n        console.error('Error fetching transactions:', error);\r\n        setHasTransactions(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTotalBalance = async () => {\r\n      if (selectedFirmId) {\r\n        try {\r\n          const firm_id = selectedFirmId;\r\n          const response = await fetch(`${api_url}/api/users/firm_total_bal/${firm_id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch total balance');\r\n          }\r\n          const resdata = await response.json();\r\n          setTotalBalance(resdata.data.totalBalance);\r\n        } catch (error) {\r\n          console.error('Error fetching total balance:', error);\r\n        }\r\n      }\r\n    };\r\n    fetchTotalBalance();\r\n  }, [selectedFirmId]);\r\n\r\n  return (\r\n    <div>\r\n      <AdminSidebar />\r\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\r\n        <AdminHeader />\r\n        <div className=\"body flex-grow-1 px-5\">\r\n          <>\r\n            <CRow className='justify-content-center mb-3'>\r\n              <CCol className='col-md-12'>\r\n                <CCard className='card_border_color_change py-5' style={{ borderColor: \"white\" }}>\r\n                  <CRow className='allfirms_title_mainrow'>\r\n                    <CCol className='col-md-8' style={{ marginLeft: \"10px\" }}>\r\n                      <CRow className='allfirms_title_row py-1 align-items-center'>\r\n                        <CCol className='col-md-1'>\r\n                          <CImage className='' src={AllFirms_logo} width={25} height={25} />\r\n                        </CCol>\r\n                        <CCol className='col-md-5'>\r\n                          <h4>Firm Transactions</h4>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCol>\r\n                    <CCol className='col-md-3 align-content-center justify-content-end'>\r\n                      <Link to={'/make_transfer'}>\r\n                        <CButton id=\"but_color\">Make A Transaction</CButton>\r\n                      </Link>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <CRow className='allfirms_table_row py-5 justify-content-center'>\r\n                    <CCol>\r\n                      {/* <CRow className='justify-content-center'>\r\n                        <CCol className='col-md-2'>\r\n                          <Form>\r\n                            <FormGroup as={Row} className=\"mb-3\" controlId=\"formUserType\">\r\n                              <Col>\r\n                                <Form.Check\r\n                                  type=\"radio\"\r\n                                  label=\"Firm\"\r\n                                  name=\"userType\"\r\n                                  id=\"firm\"\r\n                                  inline\r\n                                  defaultChecked\r\n                                />\r\n                                <Form.Check\r\n                                  type=\"radio\"\r\n                                  label=\"User\"\r\n                                  name=\"userType\"\r\n                                  id=\"user\"\r\n                                  inline\r\n                                />\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        </CCol>\r\n                      </CRow> */}\r\n                      <CRow className='justify-content-start mb-3'>\r\n                        <CCol md={8} className=\"justify-content-start justify-content-md-start\" style={{ paddingLeft: \"200px\" }}>\r\n                          <Form>\r\n                            <FormGroup as={Row} className=\"mb-3\">\r\n                              <Col md={11} className=\"justify-content-start justify-content-md-start\">\r\n                                {/* <Form.Label className=\"col-md-5 mb-0\">Select Firm</Form.Label> */}\r\n                                <FormControl\r\n                                  as=\"select\"\r\n                                  value={selectedFirmId}\r\n                                  className=\"form-select\"\r\n                                  onChange={(e) => setSelectedFirmId(e.target.value)}\r\n                                  style={{ maxWidth: '100%' }}  // Adjust the width as needed\r\n                                >\r\n                                  <option value=\"\">Select Firm</option>\r\n                                  {firms.map((firm) => (\r\n                                    <option key={firm.firm_id} value={firm.firm_id}>\r\n                                      {firm.firm_name}\r\n                                    </option>\r\n                                  ))}\r\n                                </FormControl>\r\n                              </Col>\r\n                            </FormGroup>\r\n                          </Form>\r\n                        </CCol>\r\n\r\n                        <CCol md={4} className=\"d-flex align-items-center justify-content-center justify-content-md-end mt-3 mt-md-0\">\r\n                          {totalBalance !== null && (\r\n                            <div style={{\r\n                              backgroundColor: 'green',\r\n                              color: 'white',\r\n                              padding: '10px',\r\n                              borderRadius: '5px'\r\n                            }}>\r\n                              Firm Total Balance: {totalBalance}\r\n                            </div>\r\n                          )}\r\n                        </CCol>\r\n                      </CRow>\r\n\r\n                      <CRow className='justify-content-center mb-3'>\r\n                        <CCol md={9} className=\"d-flex justify-content-md-between\">\r\n                          <DatePicker\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            selectsStart\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            placeholderText=\"Start Date\"\r\n                            className=\"form-control\"\r\n                            md={3}\r\n                          />\r\n                          <DatePicker\r\n                            selected={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            selectsEnd\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={startDate}\r\n                            placeholderText=\"End Date\"\r\n                            className=\"form-control\"\r\n                            md={3}\r\n                          />\r\n                          <CButton onClick={fetchTransactions} id=\"but_color\" md={2}>Filter</CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n\r\n                      <CRow>\r\n                        <Col md={12}>\r\n                          <Form>\r\n                            <Card className=\"mb-3\">\r\n                              <Card.Header className=\"text-white\" id='bg__color'>Firm Transactions</Card.Header>\r\n                              <Card.Body>\r\n                                {loading ? (\r\n                                  <p>Loading...</p>\r\n                                ) : !hasTransactions ? (\r\n                                  <p>No Transactions for this firm</p>\r\n                                ) : (\r\n                                  <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                      <tr>\r\n                                        <th>Sr.No</th>\r\n                                        <th>Account</th>\r\n                                        <th>Transaction with Firm</th>\r\n                                        <th>Cr/Dr</th>\r\n                                        <th>Date</th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {transactions.map((transaction, index) => (\r\n                                        <tr key={transaction.transaction_id}>\r\n                                          <td>{index + 1}</td>\r\n                                          {transaction.to_firm_name ? (\r\n                                            <td>{transaction.from_gl_name}</td>\r\n                                          ) : (\r\n                                            <td>{transaction.to_gl_name}</td>\r\n                                          )}\r\n\r\n                                          {transaction.to_firm_name ? (\r\n                                            <td>{transaction.to_firm_name} - {transaction.to_gl_name}</td>\r\n                                          ) : (\r\n                                            <td>{transaction.from_firm_name} - {transaction.from_gl_name}</td>\r\n                                          )}\r\n                                          <td style={{ color: transaction.type === 'payment' ? \"red\" : \"green\" }}>{transaction.type === 'payment' ? '-' : '+'}{transaction.amount}</td>\r\n                                          <td>{new Date(transaction.transaction_date).toLocaleString()}</td>\r\n                                        </tr>\r\n                                      ))}\r\n                                    </tbody>\r\n                                  </Table>\r\n                                )}\r\n                              </Card.Body>\r\n                            </Card>\r\n                          </Form>\r\n                        </Col>\r\n                      </CRow>\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCard>\r\n              </CCol>\r\n            </CRow>\r\n          </>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Firm_Transactions;"],"names":["api_url","Firm_Transactions","user","useContext","UserContext","userId","firms","setFirms","useState","selectedFirmId","setSelectedFirmId","transactions","setTransactions","loading","setLoading","totalBalance","setTotalBalance","hasTransactions","setHasTransactions","startDate","setStartDate","endDate","setEndDate","useEffect","async","response","fetch","concat","ok","Error","resdata","json","data","error","console","fetchFirms","fetchTransactions","firm_id","url","formattedStartDate","toLocaleDateString","adjustedEndDate","Date","setDate","getDate","formattedEndDate","status","length","fetchTotalBalance","_jsxs","children","_jsx","AdminSidebar","className","AdminHeader","_Fragment","CRow","CCol","CCard","style","borderColor","marginLeft","CImage","src","AllFirms_logo","width","height","Link","to","CButton","id","md","paddingLeft","Form","FormGroup","as","Row","Col","FormControl","value","onChange","e","target","maxWidth","map","firm","firm_name","backgroundColor","color","padding","borderRadius","DatePicker","selected","date","selectsStart","placeholderText","selectsEnd","minDate","onClick","Card","Header","Body","Table","striped","bordered","hover","responsive","transaction","index","to_firm_name","from_gl_name","to_gl_name","from_firm_name","type","amount","transaction_date","toLocaleString","transaction_id"],"sourceRoot":""}