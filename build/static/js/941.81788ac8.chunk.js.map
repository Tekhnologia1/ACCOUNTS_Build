{"version":3,"file":"static/js/941.81788ac8.chunk.js","mappings":"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","sources":["api/APIURL.js","views/admin/Ledgers/Create_Ledger.js"],"sourcesContent":["export const api_url = 'http://3.111.33.23:3007';","import React, { useState, useEffect, useContext } from 'react';\nimport { CButton, CCard, CCol, CImage, CRow } from '@coreui/react';\nimport { AdminHeader, AdminSidebar } from 'src/components';\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { UserContext } from 'src/context/UserContextProvider';\nimport { api_url } from 'src/api/APIURL';\n\nconst Create_Ledger = () => {\n    const { user } = useContext(UserContext);\n    const userId = user.userId;\n    const [firms, setFirms] = useState([]);\n    const [selectedFirmId, setSelectedFirmId] = useState('');\n    const [generalLedgerName, setGeneralLedgerName] = useState('');\n\n    useEffect(() => {\n        const fetchFirms = async () => {\n            try {\n                const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch data');\n                }\n                const resdata = await response.json();\n                setFirms(resdata.data);\n            } catch (error) {\n                console.error('Error fetching firms:', error);\n            }\n        };\n\n        fetchFirms();\n    }, [userId]);\n\n    const handleCreateLedger = async () => {\n        try {\n            if (!selectedFirmId || !generalLedgerName) {\n                alert('Please select a firm and enter a general ledger name');\n                return;\n            }\n\n            const firm_id = selectedFirmId;\n            const response = await axios.post(`${api_url}/api/users/create_general_ledgers/${firm_id}`, {\n                gl_name: generalLedgerName\n            });\n\n            if (response.status === 201) {\n                alert('General ledger created successfully');\n                setGeneralLedgerName(''); // Reset the input after successful creation\n            }\n        } catch (error) {\n            console.error('Error creating general ledger:', error);\n            alert('Failed to create general ledger');\n        }\n    };\n\n    return (\n        <div>\n            <AdminSidebar />\n            <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n                <AdminHeader />\n                <div className=\"body flex-grow-1 px-5\">\n                    <CRow className=\"justify-content-center mb-3\">\n                        <CCol md={12}>\n                            <CCard className=\"card_border_color_change py-5\" style={{ borderColor: \"white\" }}>\n                                <CRow className=\"allfirms_title_mainrow\">\n                                    <CCol md={9} style={{ marginLeft: \"10px\" }}>\n                                        <CRow className=\"allfirms_title_row py-1 align-items-center\">\n                                            <CCol md={1}>\n                                                <CImage className=\"\" src={AllFirms_logo} width={25} height={25} />\n                                            </CCol>\n                                            <CCol md={6}>\n                                                <h4>Create Ledger</h4>\n                                            </CCol>\n                                        </CRow>\n                                    </CCol>\n                                </CRow>\n                                <CRow className=\"allfirms_table_row py-5 justify-content-center\">\n                                    <CCol md={9}>\n                                        <Form>\n                                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formFirmName\">\n                                                <Form.Label column sm={2}>Firm Name</Form.Label>\n                                                <Col sm={10}>\n                                                    <Form.Control as=\"select\" value={selectedFirmId} className=\"form-select\" onChange={(e) => setSelectedFirmId(e.target.value)}>\n                                                        <option value=\"\">Select Firm</option>\n                                                        {firms.map((firm) => (\n                                                            <option key={firm.firm_id} value={firm.firm_id}>\n                                                                {firm.firm_name}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formGeneralLedgerName\">\n                                                <Form.Label column sm={2}>General Ledger Name</Form.Label>\n                                                <Col sm={8}>\n                                                    <Form.Control type=\"text\" value={generalLedgerName} onChange={(e) => setGeneralLedgerName(e.target.value)} />\n                                                </Col>\n                                                <Col sm={2}>\n                                                    <Button variant=\"primary\" id=\"but_color\" onClick={handleCreateLedger}>Create</Button>\n                                                </Col>\n                                            </Form.Group>\n                                            <Form.Group as={Row} className=\"mb-3\" controlId=\"formStatus\">\n                                                <Form.Label column sm={2}>Status</Form.Label>\n                                                <Col sm={10}>\n                                                    <Form.Control type=\"text\" placeholder=\"Active\" disabled />\n                                                </Col>\n                                            </Form.Group>\n                                        </Form>\n                                    </CCol>\n                                </CRow>\n                            </CCard>\n                        </CCol>\n                    </CRow>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Create_Ledger;\n"],"names":["api_url","Create_Ledger","user","useContext","UserContext","userId","firms","setFirms","useState","selectedFirmId","setSelectedFirmId","generalLedgerName","setGeneralLedgerName","useEffect","async","response","fetch","concat","ok","Error","resdata","json","data","error","console","fetchFirms","_jsxs","children","_jsx","AdminSidebar","className","AdminHeader","CRow","CCol","md","CCard","style","borderColor","marginLeft","CImage","src","AllFirms_logo","width","height","Form","Group","as","Row","controlId","Label","column","sm","Col","Control","value","onChange","e","target","map","firm","firm_id","firm_name","type","Button","variant","id","onClick","alert","axios","post","gl_name","status","placeholder","disabled"],"sourceRoot":""}