{"version":3,"file":"static/js/449.e7bf4c30.chunk.js","mappings":"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","sources":["api/APIRegister.js","api/APIURL.js","views/pages/login/New_Password.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n\n\nimport { api_url } from 'src/api/APIURL';\n\n\n\nconst APIRegister = () => {\n\n  //User_Reg\n  const REGISTER = async (data) => {\n    try {\n      const response = await axios.post(`${api_url}/api/users/register`, data);\n      return response.data;\n    } catch (error) {\n      console.log('Error registering:', error);\n      throw error;\n    }\n  };\n\n  // User_Login\n  const LOGIN = async (data) => {\n    try {\n      const response = await axios.post(`${api_url}/api/users/login`, data);\n      return response.data;\n    } catch (error) {\n      console.log('Invalid credentials:', error);\n      throw error;\n    }\n  };\n\n  // //User_Reset_Pass\n  // const RESET_PASS = async (data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Reset_Password/${data.mobileNo}`, { newPassword: data.newPassword });\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Can't reset password:\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n  // //Fill_ORG_Details\n  // // http://192.168.1.69:3002/Add_Institute/231     :userId\n  // const ORG_DETAILS = async (userId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Institute/${userId}`, data);\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add details\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n  // //ADD_SCHOOL_OR_BRANCH\n  // // http://192.168.1.69:3002/Add_Branch/231/4    :userId/instituteId\n  // const ADD_SCHOOL_OR_BRANCH = async (userId, instituteId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Branch/${userId}/${instituteId}`, data);\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add branch:\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n\n  // //REG_SCHOOL_OR_BRANCH-------//Add School details by Principal\n  // // http://192.168.1.69:3002/Register_Branch/2     :userId\n  // const REG_SCHOOL_OR_BRANCH = async (userId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Register_Branch/${userId}`, data);\n\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add details:\", error);\n  //     throw error;\n  //   }\n  // };\n\n\n  // //Add_Individual_Personal_Details\n  // // http://192.168.1.69:3002/Add_Info_Indivisual/249   :userId\n  // const ADD_INDIV_PERSO = async (userId, data) => {\n  //   try {\n  //     const response = await axios.post(`${api_url}/Add_Info_Indivisual/${userId}`, data);\n  //     return response.data;\n  //   } catch (error) {\n  //     console.log(\"Unable to add details:\", error);\n  //     throw error;\n  //   }\n  // };\n\n  return { REGISTER, LOGIN };\n}\n\nexport { APIRegister };","export const api_url = 'http://13.233.105.76:3007';","import React, { useState } from 'react'\r\nimport { CButton, CCol, CForm, CFormInput, CInputGroup, CRow } from '@coreui/react'\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nimport { APIRegister } from 'src/api/APIRegister';\r\n\r\nconst New_Password = () => {\r\n\r\n  const { contactNoReg } = useParams();\r\n  \r\n  \r\n  const [passwordReg, setPasswordReg] = useState('');\r\n  const [confpasswordReg, setConfPasswordReg] = useState('');\r\n\r\n\r\n\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [confpasswordError, setConfPasswordError] = useState('');\r\n\r\n\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\n  const validatePassword = () => {\r\n    return passwordReg.length >= 8;\r\n  };\r\n\r\n\r\n  const new_pass = () => {\r\n\r\n\r\n    if (!validatePassword()) {\r\n      setPasswordError('Please use atleast 8-digit passwordddd.');\r\n      return;\r\n    }\r\n\r\n    APIRegister().RESET_PASS({\r\n      // Name: usernameReg,\r\n      mobileNo: contactNoReg,\r\n      newPassword: passwordReg,\r\n    }).then((response) => {\r\n      console.log(response);\r\n      setSuccessMessage('New Password saved successfully!');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 1000);\r\n    }).catch((error) => {\r\n      console.error(\"Something went wrong:\", error);\r\n      setErrorMessage('Something went wrong. Please try again later.');\r\n    });\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const handlePasswordChange = (e) => {\r\n\r\n    const password = e.target.value;\r\n    setPasswordReg(password);\r\n    if (password.length < 8) {\r\n      setPasswordError('Password must be at least 8 characters long.');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n\r\n  const handleConfPasswordChange = (e) => {\r\n\r\n    const confpassword = e.target.value;\r\n    setConfPasswordReg(confpassword);\r\n    if (confpassword === passwordReg) {\r\n      setConfPasswordError('');\r\n    } else {\r\n      setConfPasswordError(\"Password doesn't match\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol className='login_left col-md-4'>\r\n          <CButton className='login_left_login_button'>\r\n            Login\r\n          </CButton>\r\n          <br />\r\n          <Link to={'/signup'}>\r\n            <CButton className='login_left_signup_button'>\r\n              Sign Up\r\n            </CButton>\r\n          </Link>\r\n        </CCol>\r\n        <CCol className='login_right col-md-8'>\r\n          <CForm>\r\n            <h1 className='text-center defaultcolor' >New Password </h1>\r\n\r\n\r\n            {/* ------------------------ Password---------------------------- */}\r\n            Password\r\n            <CInputGroup className=\"mb-2\">\r\n              <CFormInput\r\n                value={passwordReg}\r\n                onChange={handlePasswordChange}\r\n                style={{ borderRadius: '25px' }}\r\n                type=\"text\"\r\n\r\n              />\r\n            </CInputGroup>\r\n            {passwordError && <div className=\"text-danger mb-2\">{passwordError}</div>}\r\n\r\n            {/* ------------------------Confirm Password---------------------------- */}\r\n            Confirm Paassword\r\n            <CInputGroup className=\"mb-2\">\r\n              <CFormInput\r\n                value={confpasswordReg}\r\n                onChange={handleConfPasswordChange}\r\n                style={{ borderRadius: '25px' }}\r\n                type=\"text\"\r\n\r\n              />\r\n            </CInputGroup>\r\n            {confpasswordError && <div className=\"text-danger mb-2\">{confpasswordError}</div>}\r\n\r\n            <CRow className='mt-5'>\r\n              <CCol xs={12} className='text-center'>\r\n                <CButton onClick={() => { new_pass(); }} className=\"login_submit_button px-4\" type='button' shape=\"rounded-pill\">\r\n                  Save New Password\r\n                </CButton>\r\n                {errorMessage && <div className=\"text-danger\">{errorMessage}</div>}\r\n                {successMessage && <div className=\"text-success\">{successMessage}</div>}\r\n              </CCol>\r\n            </CRow>\r\n          </CForm>\r\n        </CCol>\r\n      </CRow>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default New_Password"],"names":["APIRegister","REGISTER","async","axios","post","concat","api_url","data","error","console","log","LOGIN","New_Password","contactNoReg","useParams","passwordReg","setPasswordReg","useState","confpasswordReg","setConfPasswordReg","passwordError","setPasswordError","confpasswordError","setConfPasswordError","successMessage","setSuccessMessage","errorMessage","setErrorMessage","new_pass","length","RESET_PASS","mobileNo","newPassword","then","response","setTimeout","window","location","reload","catch","_jsx","children","_jsxs","CRow","CCol","className","CButton","Link","to","CForm","CInputGroup","CFormInput","value","onChange","e","password","target","style","borderRadius","type","confpassword","xs","onClick","shape"],"sourceRoot":""}