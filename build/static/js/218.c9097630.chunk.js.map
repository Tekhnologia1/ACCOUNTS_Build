{"version":3,"file":"static/js/218.c9097630.chunk.js","mappings":"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","sources":["api/APIURL.js","views/admin/Receipts/CreateReceipt.js"],"sourcesContent":["export const api_url = 'http://192.168.29.141:3007';","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, FormLabel, FormControl, FormCheck, Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AdminSidebar from 'src/components/admincomponents/AdminSidebar';\r\nimport AdminHeader from 'src/components/admincomponents/AdminHeader';\r\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\r\nimport { UserContext } from 'src/context/UserContextProvider';\r\nimport { api_url } from 'src/api/APIURL';\r\n\r\nconst CreateReceipt = () => {\r\n    const { user } = useContext(UserContext);\r\n    const userId = user.userId;\r\n\r\n    const [firms, setFirms] = useState([]);\r\n    const [selectedFromFirmId, setSelectedFromFirmId] = useState('');\r\n    const [selectedToFirmId, setSelectedToFirmId] = useState('');\r\n    const [fromGeneralLedgers, setFromGeneralLedgers] = useState([]);\r\n    const [toGeneralLedgers, setToGeneralLedgers] = useState([]);\r\n    const [selectedFromGLId, setSelectedFromGLId] = useState('');\r\n    const [selectedToGLId, setSelectedToGLId] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [loadingFromGL, setLoadingFromGL] = useState(false);\r\n    const [loadingToGL, setLoadingToGL] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchFirms = async () => {\r\n            try {\r\n                const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                const resdata = await response.json();\r\n                setFirms(resdata.data);\r\n            } catch (error) {\r\n                console.error('Error fetching firms:', error);\r\n            }\r\n        };\r\n        fetchFirms();\r\n    }, [userId]);\r\n\r\n    const fetchGeneralLedgers = async (firm_id) => {\r\n        try {\r\n            const response = await fetch(`${api_url}/api/users/get_general_ledgers/${firm_id}`);\r\n            if (!response.ok) {\r\n                throw new Error('No GLs here');\r\n            }\r\n            const data = await response.json();\r\n            return data.data;\r\n        } catch (error) {\r\n            console.error('Error fetching data of GLs:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loadGeneralLedgers = async () => {\r\n            if (selectedFromFirmId) {\r\n                setLoadingFromGL(true);\r\n                const generalLedgers = await fetchGeneralLedgers(selectedFromFirmId);\r\n                setFromGeneralLedgers(generalLedgers);\r\n                setLoadingFromGL(false);\r\n            }\r\n        };\r\n        loadGeneralLedgers();\r\n    }, [selectedFromFirmId]);\r\n\r\n    useEffect(() => {\r\n        const loadGeneralLedgers = async () => {\r\n            if (selectedToFirmId) {\r\n                setLoadingToGL(true);\r\n                const generalLedgers = await fetchGeneralLedgers(selectedToFirmId);\r\n                setToGeneralLedgers(generalLedgers);\r\n                setLoadingToGL(false);\r\n            }\r\n        };\r\n        loadGeneralLedgers();\r\n    }, [selectedToFirmId]);\r\n\r\n    const handleSaveReceipt = async () => {\r\n        try {\r\n            const payload = {\r\n                to_firm_id: selectedToFirmId,\r\n                to_gl_id: selectedToGLId,\r\n                from_firm_id: selectedFromFirmId,\r\n                from_gl_id: selectedFromGLId,\r\n                amount: Number(amount)\r\n            };\r\n\r\n            const response = await fetch(`${api_url}/api/users/receipt/${userId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(payload)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to process receipt');\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log(result);\r\n            alert('Amount received !');\r\n            // setTimeout(() => {\r\n            //     window.location.reload();\r\n            // }, 1000);\r\n        } catch (error) {\r\n            console.error('Error processing receipt:', error);\r\n            alert('Receipt failed');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AdminSidebar />\r\n            <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\r\n                <AdminHeader />\r\n                <div className=\"flex-grow-1 px-3 px-md-5\">\r\n                    <Row className=\"justify-content-center mb-3\">\r\n                        <Col xs={12}>\r\n                            <Card className=\"card_border_color_change py-5\" style={{ borderColor: \"white\" }}>\r\n                                <Row className=\"allfirms_title_mainrow\">\r\n                                    <Col xs={12} md={9} className=\"mb-2 mb-md-0\" style={{ marginLeft: \"10px\" }}>\r\n                                        <Row className=\"allfirms_title_row py-1 align-items-center\">\r\n                                            <Col xs={2} md={1}>\r\n                                                <img className=\"\" src={AllFirms_logo} width={25} height={25} alt=\"AllFirms Logo\" />\r\n                                            </Col>\r\n                                            <Col xs={10} md={4}>\r\n                                                <h4>Receipts</h4>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={12} md={2} className=\"d-flex align-items-center justify-content-end\">\r\n                                        <Link to={'/all_receipts'}>\r\n                                            <Button id=\"but_color\">All Receipts</Button>\r\n                                        </Link>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"allfirms_table_row py-5 justify-content-center\">\r\n                                    <Col xs={12} md={6}>\r\n                                        {/* <Row className=\"justify-content-center\">\r\n                                            <Col xs={12} md={3} className=\"mb-3 mb-md-0\">\r\n                                                <Form>\r\n                                                    <FormGroup as={Row} className=\"mb-3\" controlId=\"formUserType\">\r\n                                                        <Col>\r\n                                                            <Form.Check type=\"radio\" label=\"Firm\" name=\"userType\" id=\"firm\" inline defaultChecked />\r\n                                                            <Form.Check type=\"radio\" label=\"User\" name=\"userType\" id=\"user\" inline />\r\n                                                        </Col>\r\n                                                    </FormGroup>\r\n                                                </Form>\r\n                                            </Col>\r\n                                        </Row> */}\r\n\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Col xs={12}>\r\n                                                <Card className=\"bg_color_blue_white\">\r\n                                                    <Card.Body>\r\n                                                        <Form>\r\n                                                            <FormGroup className=\"mb-3\" controlId=\"formTransactionID\">\r\n                                                                <FormLabel>Transaction ID / SD101D</FormLabel>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup as={Row} className=\"mb-3\" controlId=\"formTo\">\r\n                                                                <FormLabel column xs={12} sm={2}>To:</FormLabel>\r\n                                                                <Col xs={12} sm={5}>\r\n                                                                    <Form.Control\r\n                                                                        as=\"select\"\r\n                                                                        value={selectedToFirmId}\r\n                                                                        className=\"form-select\"\r\n                                                                        onChange={(e) => setSelectedToFirmId(e.target.value)}\r\n                                                                    >\r\n                                                                        <option value=\"\">Select To Firm</option>\r\n                                                                        {firms.map((firm) => (\r\n                                                                            <option key={firm.firm_id} value={firm.firm_id}>{firm.firm_name}</option>\r\n                                                                        ))}\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                                <Col xs={12} sm={5}>\r\n                                                                    <Form.Control\r\n                                                                        as=\"select\"\r\n                                                                        value={selectedToGLId}\r\n                                                                        className=\"form-select\"\r\n                                                                        onChange={(e) => setSelectedToGLId(e.target.value)}\r\n                                                                        disabled={!selectedToFirmId || loadingToGL}\r\n                                                                    >\r\n                                                                        <option value=\"\">Select GL</option>\r\n                                                                        {toGeneralLedgers.map((gl) => (\r\n                                                                            <option key={gl.gl_id} value={gl.gl_id}>{gl.gl_name}</option>\r\n                                                                        ))}\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup as={Row} className=\"mb-3\" controlId=\"formFrom\">\r\n                                                                <FormLabel column xs={12} sm={2}>From:</FormLabel>\r\n                                                                <Col xs={12} sm={5}>\r\n                                                                    <Form.Control\r\n                                                                        as=\"select\"\r\n                                                                        value={selectedFromFirmId}\r\n                                                                        className=\"form-select\"\r\n                                                                        onChange={(e) => setSelectedFromFirmId(e.target.value)}\r\n                                                                    >\r\n                                                                        <option value=\"\">Select From Firm</option>\r\n                                                                        {firms.map((firm) => (\r\n                                                                            <option key={firm.firm_id} value={firm.firm_id}>{firm.firm_name}</option>\r\n                                                                        ))}\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                                <Col xs={12} sm={5}>\r\n                                                                    <Form.Control\r\n                                                                        as=\"select\"\r\n                                                                        value={selectedFromGLId}\r\n                                                                        className=\"form-select\"\r\n                                                                        onChange={(e) => setSelectedFromGLId(e.target.value)}\r\n                                                                        disabled={!selectedFromFirmId || loadingFromGL}\r\n                                                                    >\r\n                                                                        <option value=\"\">Select GL</option>\r\n                                                                        {fromGeneralLedgers.map((gl) => (\r\n                                                                            <option key={gl.gl_id} value={gl.gl_id}>{gl.gl_name}</option>\r\n                                                                        ))}\r\n                                                                    </Form.Control>\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup as={Row} className=\"mb-3\" controlId=\"formAmount\">\r\n                                                                <FormLabel column xs={12} sm={2}>Amount:</FormLabel>\r\n                                                                <Col xs={12} sm={10}>\r\n                                                                    <FormControl\r\n                                                                        type=\"number\"\r\n                                                                        placeholder=\"Enter Amount\"\r\n                                                                        value={amount}\r\n                                                                        onChange={(e) => setAmount(e.target.value)}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </FormGroup>\r\n                                                            <Row className='justify-content-center mt-3'>\r\n                                                                <Button className='col-md-3 col-6' id=\"but_color\" onClick={handleSaveReceipt}>Create Receipt</Button>\r\n                                                            </Row>\r\n                                                        </Form>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateReceipt;\r\n"],"names":["api_url","CreateReceipt","user","useContext","UserContext","userId","firms","setFirms","useState","selectedFromFirmId","setSelectedFromFirmId","selectedToFirmId","setSelectedToFirmId","fromGeneralLedgers","setFromGeneralLedgers","toGeneralLedgers","setToGeneralLedgers","selectedFromGLId","setSelectedFromGLId","selectedToGLId","setSelectedToGLId","amount","setAmount","loadingFromGL","setLoadingFromGL","loadingToGL","setLoadingToGL","useEffect","async","response","fetch","concat","ok","Error","resdata","json","data","error","console","fetchFirms","fetchGeneralLedgers","firm_id","generalLedgers","loadGeneralLedgers","_jsxs","children","_jsx","AdminSidebar","className","AdminHeader","Row","Col","xs","Card","style","borderColor","md","marginLeft","src","AllFirms_logo","width","height","alt","Link","to","Button","id","Body","Form","FormGroup","controlId","FormLabel","as","column","sm","Control","value","onChange","e","target","map","firm","firm_name","disabled","gl","gl_id","gl_name","FormControl","type","placeholder","onClick","payload","to_firm_id","to_gl_id","from_firm_id","from_gl_id","Number","method","headers","body","JSON","stringify","result","log","alert"],"sourceRoot":""}