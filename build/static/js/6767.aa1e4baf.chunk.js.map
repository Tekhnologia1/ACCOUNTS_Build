{"version":3,"file":"static/js/6767.aa1e4baf.chunk.js","mappings":"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","sources":["api/APIURL.js","views/admin/Firms/All_Firms.js"],"sourcesContent":["export const api_url = 'http://20.235.178.6:3007';","import React, { useContext, useEffect, useState } from 'react';\r\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\r\nimport { CButton, CCard, CImage, CCol, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react';\r\nimport { AdminHeader, AdminSidebar } from 'src/components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from 'src/context/UserContextProvider';\r\nimport { api_url } from 'src/api/APIURL';\r\nimport axios from 'axios';\r\nimport { Col, Form, Modal, Row } from 'react-bootstrap';\r\nimport Firms_icon from 'src/assets/icons/sidebar_icons/Firms.png'\r\nimport { Button } from '@coreui/coreui';\r\n\r\nconst All_Firms = () => {\r\n  const { user } = useContext(UserContext);\r\n  const userId = user.userId;\r\n  useEffect(() => {\r\n    console.log(userId);\r\n\r\n  }, [userId])\r\n\r\n  const [firmsData, setFirmsData] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editData, setEditData] = useState({ firm_id: '', firm_name: '', firm_email: '', firm_gstno: '', firm_address: '', firm_status: '' });\r\n  const [totalBalanceall, setTotalBalanceAll] = useState(null);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [firmToDelete, setFirmToDelete] = useState(null);\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n  const [firmDetails, setFirmDetails] = useState({});\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch data');\r\n      }\r\n      const data = await response.json();\r\n      setFirmsData(data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTotalBalance = async () => {\r\n    try {\r\n      const response = await fetch(`${api_url}/api/users/total_bal_of_all_firms/${userId}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch total balance');\r\n      }\r\n      const data = await response.json();\r\n      setTotalBalanceAll(data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching total balance:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    fetchTotalBalance();\r\n  }, [userId]);\r\n\r\n  const updateFirmData = async (firm_id, data) => {\r\n    try {\r\n      const response = await axios.put(`${api_url}/api/users/update_firm_details/${firm_id}`, data);\r\n      if (response.status !== 200) {\r\n        throw new Error('Failed to update data');\r\n      }\r\n      const responseData = response.data;\r\n      alert(responseData.message);\r\n      setShowModal(false);\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error('Error updating data:', error);\r\n    }\r\n  };\r\n\r\n  const deleteFirmData = async (firm_id) => {\r\n    try {\r\n      const response = await axios.delete(`${api_url}/api/users/delete_firm/${firm_id}`);\r\n      if (response.status !== 200) {\r\n        throw new Error('Failed to delete data');\r\n      }\r\n      const data = response.data;\r\n      // alert(data.message);\r\n      fetchData();\r\n    } catch (error) {\r\n      console.error('Error deleting data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchFirmDetails = async (firm_id) => {\r\n    try {\r\n      const response = await axios.get(`${api_url}/api/users/get_firm_details/${firm_id}`);\r\n      if (response.status !== 200) {\r\n        throw new Error('Failed to fetch firm details');\r\n      }\r\n      const data = response.data;\r\n      setFirmDetails(data.data);\r\n      setShowDetailsModal(true);\r\n    } catch (error) {\r\n      console.error('Error fetching firm details:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (firm) => {\r\n    setEditData(firm);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    updateFirmData(editData.firm_id, {\r\n      firm_name: editData.firm_name,\r\n      firm_email: editData.firm_email,\r\n      firm_gstno: editData.firm_gstno,\r\n      firm_address: editData.firm_address,\r\n      firm_status: '1'\r\n    });\r\n  };\r\n\r\n  const handleDelete = (firm) => {\r\n    setFirmToDelete(firm);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    deleteFirmData(firmToDelete.firm_id);\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  const handleView = (firm_id) => {\r\n    fetchFirmDetails(firm_id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminSidebar />\r\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\r\n        <AdminHeader />\r\n        <div className=\"body flex-grow-1 px-2 px-md-2\">\r\n          <CRow className='justify-content-center mb-3'>\r\n            <CCol className='col-md-12'>\r\n              <CCard className='card_border_color_change py-4' style={{ borderColor: \"white\" }}>\r\n                <CRow className='align-items-center'>\r\n                  <CCol style={{ marginLeft: \"11px\" }}>\r\n                    <CRow className='allfirms_icon_title_row align-items-center'>\r\n                      <CCol className='col-2 col-md-1'>\r\n                        <img className='sidebar_icon_color' src={Firms_icon} width={25} height={25} alt=\"All Firms Logo\" />\r\n                      </CCol>\r\n                      <CCol className='col-7 col-md-7'>\r\n                        <h5 className=\"title_font mb-0\" style={{ color: 'white' }}>All Firms</h5>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                  <CCol className=\"col-5 facc_crea_but_col\">\r\n                    <Link to={'/create_firms'}>\r\n                      <CButton id=\"but_color\" className='m-0'>Create Firm</CButton>\r\n                    </Link>\r\n                  </CCol>\r\n                </CRow>\r\n\r\n\r\n                <CRow className='justify-content-center mt-4 allf_tot_bal'>\r\n                  <CCol md={11} className=\"d-flex align-items-center justify-content-end\">\r\n                    {totalBalanceall !== null && (\r\n                      <div className='mx-sm-4'\r\n                        style={{\r\n                          backgroundColor: 'green',\r\n                          color: 'white',\r\n                          padding: '10px',\r\n                          borderRadius: '5px'\r\n                        }}>\r\n                        Cash in Hand: {totalBalanceall}\r\n                      </div>\r\n                    )}\r\n                  </CCol>\r\n                </CRow>\r\n\r\n                <CRow className='allfirms_table_row py-3 px-3'>\r\n                  <CTable hover responsive className=\"custom-table\">\r\n                    <CTableHead className=\"custom-table-header\">\r\n                      <CTableRow>\r\n                        <CTableHeaderCell>Sr. No.</CTableHeaderCell>\r\n                        <CTableHeaderCell>Firm Name</CTableHeaderCell>\r\n                        <CTableHeaderCell>Address</CTableHeaderCell>\r\n                        <CTableHeaderCell>Status</CTableHeaderCell>\r\n                        <CTableHeaderCell>GST No.</CTableHeaderCell>\r\n                        <CTableHeaderCell>Curr. Balance</CTableHeaderCell>\r\n                        <CTableHeaderCell>Action</CTableHeaderCell>\r\n                        <CTableHeaderCell>Details</CTableHeaderCell>\r\n                      </CTableRow>\r\n                    </CTableHead>\r\n                    <CTableBody>\r\n                      {firmsData.map((firm, index) => (\r\n                        <CTableRow key={firm.firm_id}>\r\n                          <CTableDataCell>{index + 1}</CTableDataCell>\r\n                          <CTableDataCell>{firm.firm_name}</CTableDataCell>\r\n                          <CTableDataCell>{firm.firm_address}</CTableDataCell>\r\n                          <CTableDataCell>{firm.firm_status}</CTableDataCell>\r\n                          <CTableDataCell>{firm.firm_gstno}</CTableDataCell>\r\n                          <CTableDataCell>{firm.total_balance}</CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <CButton color=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => handleEdit(firm)}>Edit</CButton>\r\n                            <CButton color=\"danger\" size=\"sm\" onClick={() => handleDelete(firm)}>Delete</CButton>\r\n                          </CTableDataCell>\r\n                          <CTableDataCell>\r\n                            <CButton color=\"info\" size=\"sm\" onClick={() => handleView(firm.firm_id)}>View</CButton>\r\n                          </CTableDataCell>\r\n                        </CTableRow>\r\n                      ))}\r\n                    </CTableBody>\r\n                  </CTable>\r\n                </CRow>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Firm</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formFirmName\">\r\n              <Form.Label>Firm Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editData.firm_name}\r\n                onChange={(e) => setEditData({ ...editData, firm_name: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formFirmEmail\" className=\"mt-3\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editData.firm_email}\r\n                onChange={(e) => setEditData({ ...editData, firm_email: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formFirmGstno\" className=\"mt-3\">\r\n              <Form.Label>GST No.</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editData.firm_gstno}\r\n                onChange={(e) => setEditData({ ...editData, firm_gstno: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formFirmAddress\" className=\"mt-3\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={editData.firm_address}\r\n                onChange={(e) => setEditData({ ...editData, firm_address: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CButton color=\"secondary\" onClick={() => setShowModal(false)}>Close</CButton>\r\n          <CButton color=\"primary\" onClick={handleSave}>Save changes</CButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)} size=\"sm\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Confirmation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this firm?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CButton color=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</CButton>\r\n          <CButton color=\"danger\" onClick={confirmDelete}>Delete</CButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showDetailsModal} onHide={() => setShowDetailsModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Firm Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <h5>Firm Name: {firmDetails.firm_name}</h5>\r\n            <p>Email: {firmDetails.firm_email}</p>\r\n            <p>GST No: {firmDetails.firm_gstno}</p>\r\n            <p>Address: {firmDetails.firm_address}</p>\r\n            <p>Status: {firmDetails.firm_status}</p>\r\n            <p>Current Balance: {firmDetails.total_balance}</p>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <CButton color=\"secondary\" onClick={() => setShowDetailsModal(false)}>Close</CButton>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default All_Firms;\r\n"],"names":["api_url","All_Firms","user","useContext","UserContext","userId","useEffect","console","log","firmsData","setFirmsData","useState","showModal","setShowModal","editData","setEditData","firm_id","firm_name","firm_email","firm_gstno","firm_address","firm_status","totalBalanceall","setTotalBalanceAll","showDeleteModal","setShowDeleteModal","firmToDelete","setFirmToDelete","showDetailsModal","setShowDetailsModal","firmDetails","setFirmDetails","fetchData","async","response","fetch","concat","ok","Error","data","json","error","fetchTotalBalance","handleView","axios","get","status","fetchFirmDetails","_jsxs","children","_jsx","AdminSidebar","className","AdminHeader","CRow","CCol","CCard","style","borderColor","marginLeft","src","Firms_icon","width","height","alt","color","Link","to","CButton","id","md","backgroundColor","padding","borderRadius","CTable","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","map","firm","index","CTableDataCell","total_balance","size","onClick","handleEdit","handleDelete","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","value","onChange","e","target","Footer","handleSave","put","responseData","alert","message","updateFirmData","confirmDelete","delete","deleteFirmData"],"sourceRoot":""}