{"version":3,"file":"static/js/95.eacdc49c.chunk.js","mappings":"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","sources":["views/pages/login/LoginForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Form, Link, NavLink } from 'react-router-dom'\nimport {\n    CAlert,\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CFormInput,\n    CFormLabel,\n    CFormSelect,\n    CHeader,\n    CHeaderBrand,\n    CHeaderNav,\n    CInputGroup,\n    CInputGroupText,\n    CModal,\n    CModalBody,\n    CNavItem,\n    CNavLink,\n    CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibChef, cilAt, cilLockLocked, cilUser } from '@coreui/icons'\nimport { logo } from 'src/assets/brand/logo'\nimport Colors from '@coreui/react'\nimport image from 'src/assets/images/image1.jpg'\n\nconst LoginForgotPassword = () => {\n\n    const [otpblockvisible, setOTPBlockVisible] = useState(false);\n\n\n\n    const [contactNoReg, setContactNoReg] = useState('');\n    // const [otp, setOTP] = useState('');\n\n    const [numberError, setNumberError] = useState('');\n\n\n    //--------------------------------------------------------------\n\n    const [otp, setOTP] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleOTPChange = (e) => {\n        const { value } = e.target;\n        if (/^\\d*$/.test(value) && value.length <= 4) {\n            setOTP(value);\n            setErrorMessage('');\n        }\n    };\n\n    const handleSubmit = () => {\n        if (otp.length === 4) {\n            // Validate OTP here, e.g., by sending to server for verification\n            console.log('Entered OTP:', otp);\n        } else {\n            setErrorMessage('Please enter a valid 4-digit OTP.');\n        }\n    };\n\n    //--------------------------------------------------------------\n    // const [successMessage, setSuccessMessage] = useState('');\n    // const [errorMessage, setErrorMessage] = useState('');\n\n\n    const handleNumberChange = (e) => {\n        // Allow only 10 digits\n        const regex = /^\\d{0,10}$/;\n        if (regex.test(e.target.value) || e.target.value === '') {\n            setContactNoReg(e.target.value);\n            setNumberError('');\n        } else {\n            setNumberError('Contact no must be 10 digit number');\n        }\n    };\n\n    const validateNumber = () => {\n        const regex = /^\\d{10}$/;\n        return regex.test(contactNoReg);\n    };\n\n    const forgotpassword = () => {\n\n        if (!validateNumber()) {\n            setNumberError('Please enter a valid 10-digit phone number.');\n            return;\n        } else {\n            setOTPBlockVisible(!otpblockvisible);\n        }\n    }\n\n    \n\n    return (\n        <div>\n            <CRow className=\"\">\n                <CCol className='login_left col-md-4'>\n                    <CButton className='login_left_login_button'>\n                        Login\n                    </CButton>\n                    <br />\n                    <Link to={'/signup'}>\n                        <CButton className='login_left_signup_button'>\n                            Sign Up\n                        </CButton>\n                    </Link>\n                </CCol>\n\n                <CCol className='login_right col-md-8'>\n\n                    <CForm>\n                        <h1 className='text-center defaultcolor'>Forgot password</h1>\n\n\n                        {/* ------------------------Contact No---------------------------- */}\n                        Contact Number\n                        <CInputGroup className=\"mb-2\">\n                            <CFormInput\n                                value={contactNoReg}\n                                onChange={handleNumberChange}\n                                style={{ borderRadius: '25px' }}\n                                type=\"tel\"\n\n                            />\n                        </CInputGroup>\n                        {numberError && <div className=\"text-danger mb-2\">{numberError}</div>}\n\n\n                        <CRow className='mt-5'>\n                            <CCol xs={12} className='text-center'>\n                                <CButton onClick={() => { forgotpassword(); }} className=\"login_submit_button px-4\" type='button' shape=\"rounded-pill\">\n                                    Send OTP\n                                </CButton>\n                                {/* {errorMessage && <div className=\"text-danger\">{errorMessage}</div>}\n                                {successMessage && <div className=\"text-success\">{successMessage}</div>} */}\n                            </CCol>\n                        </CRow>\n                    </CForm>\n\n                </CCol>\n            </CRow>\n\n\n\n            <CModal\n                alignment=\"center\"\n                visible={otpblockvisible}\n                onClose={() => setOTPBlockVisible(false)}\n                aria-labelledby=\"VerticallyCenteredExample\">\n                <CModalBody>\n                    <CForm>\n                        <CRow className=\"justify-content-center\">\n                            <CCol sm=\"4\">\n                                <CFormInput\n                                    type=\"text\"\n                                    placeholder=\"Enter OTP\"\n                                    value={otp}\n                                    onChange={handleOTPChange}\n                                />\n                                {errorMessage && <div className=\"text-danger\">{errorMessage}</div>}\n                            </CCol>\n                        </CRow>\n                        <CRow className=\"justify-content-center mt-3\">\n                            <CCol sm=\"4\">\n                                <Link to={`/new_password/${contactNoReg}`}>\n                                    <CButton color=\"primary\" onClick={() => { handleSubmit(); setOTPBlockVisible(false); }}>Submit OTP</CButton>\n                                </Link>\n                            </CCol>\n                        </CRow>\n                    </CForm>\n\n                </CModalBody>\n            </CModal>\n\n\n\n\n\n\n\n\n\n            {/* <CHeader position=\"sticky\" >\n                <CContainer fluid>\n                    <CHeaderNav className=\"d-none d-md-flex me-auto\">\n                        <CHeaderBrand className=\"d-none d-md-flex me-auto\">\n                            <CIcon className=\"sidebar-brand-full\" icon={cibChef} height={35} />\n\n                            <strong style={sitelogo}>Ques.Digi</strong>\n                        </CHeaderBrand>\n                        <CNavItem>\n                            <CNavLink to=\"/home\" component={NavLink}>\n                                Home\n                            </CNavLink>\n                        </CNavItem>\n                    </CHeaderNav>\n                </CContainer>\n            </CHeader>\n            <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\" style={{ backgroundImage: `url(${image})`, backgroundSize: 'cover' }}>\n                <CContainer>\n                    <CRow className=\"justify-content-center\">\n                        <CCol md={8}>\n                            <CCardGroup>\n                                <CCard className=\"p-4\">\n                                    <CCardBody>\n                                        <CForm className=\"row g-3 needs-validation\"\n                                            noValidate\n                                            validated={validated}\n                                            onSubmit={handleSubmit}>\n                                            <h1>Forgot Password</h1>\n                                            <p className=\"text-medium-emphasis\">Enter your registered email id </p>\n                                            <CInputGroup className=\"mb-3\">\n                                                <CInputGroupText>\n                                                    <CIcon icon={cilAt} />\n                                                </CInputGroupText>\n                                                <CFormInput placeholder=\"Email\" type=\"email\"\n                                                    aria-describedby=\"inputGroupPrependFeedback\"\n                                                    feedbackInvalid=\"Please enter your email id \"\n                                                    id=\"validationTooltipUsername\"\n                                                    required\n                                                    tooltipFeedback />\n                                            </CInputGroup>\n                                            <CRow>\n                                                <CCol xs={6}><br />\n                                                    <CAlert style={{ backgroundColor: \"white\", border: \"none\" }}\n                                                        color=\"warning\"\n                                                        onButton={() => {\n                                                            alert('👋 Well, hi there! Thanks for dismissing me.')\n                                                        }}\n                                                        >\n\n\n\n                                                        <CButton \n                                                            \n                                                            color=\"primary\" className=\"px-4\" type='submit'\n                                                        >\n                                                            Reset Password\n                                                        </CButton>\n\n                                                    </CAlert>\n                                                </CCol>\n                                            </CRow>\n                                        </CForm>\n                                    </CCardBody>\n                                </CCard>\n                            </CCardGroup>\n                        </CCol>\n                    </CRow>\n                </CContainer>\n            </div> */}\n        </div>\n    )\n}\n\nexport default LoginForgotPassword\n"],"names":["LoginForgotPassword","otpblockvisible","setOTPBlockVisible","useState","contactNoReg","setContactNoReg","numberError","setNumberError","otp","setOTP","errorMessage","setErrorMessage","forgotpassword","test","_jsxs","children","CRow","className","CCol","_jsx","CButton","Link","to","CForm","CInputGroup","CFormInput","value","onChange","e","target","style","borderRadius","type","xs","onClick","shape","CModal","alignment","visible","onClose","CModalBody","sm","placeholder","length","concat","color","console","log"],"sourceRoot":""}