{"version":3,"file":"static/js/7626.173f7b6c.chunk.js","mappings":"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","sources":["api/APIURL.js","views/firm_user/Payments/User_MakePayment.js"],"sourcesContent":["export const api_url = 'http://15.206.84.226:3007';","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Form, FormGroup, FormLabel, FormControl, Button, Card, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AllFirms_logo from 'src/assets/images/admin_dashboard_icons/AllFirms.png';\r\nimport { UserContext } from 'src/context/UserContextProvider';\r\nimport { api_url } from 'src/api/APIURL';\r\nimport { FirmusrHeader, FirmusrSidebar } from 'src/components';\r\n\r\nconst User_MakePayment = () => {\r\n  const { user } = useContext(UserContext);\r\n  const userId = user.userId;\r\n\r\n  const [firms, setFirms] = useState([]);\r\n  const [firms2, setFirms2] = useState([]);\r\n  const [selectedFromFirmId, setSelectedFromFirmId] = useState('');\r\n  const [selectedToFirmId, setSelectedToFirmId] = useState('');\r\n  const [fromGeneralLedgers, setFromGeneralLedgers] = useState([]);\r\n  const [toGeneralLedgers, setToGeneralLedgers] = useState([]);\r\n  const [selectedFromGLId, setSelectedFromGLId] = useState('');\r\n  const [selectedToGLId, setSelectedToGLId] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [loadingFromGL, setLoadingFromGL] = useState(false);\r\n  const [loadingToGL, setLoadingToGL] = useState(false);\r\n\r\n  const [showModal, setShowModal] = useState(false); // State to control modal visibility\r\n\r\n  useEffect(() => {\r\n    const fetchFirms = async () => {\r\n      try {\r\n        const response = await fetch(`${api_url}/api/users/get_all_firms_by_user/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const resdata = await response.json();\r\n        setFirms(resdata.data);\r\n      } catch (error) {\r\n        console.error('Error fetching firms:', error);\r\n      }\r\n    };\r\n    fetchFirms();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    const fetchFirms = async () => {\r\n      try {\r\n        const response = await fetch(`${api_url}/api/users/get_all_firms_by_adding_user/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch data');\r\n        }\r\n        const resdata = await response.json();\r\n        setFirms2(resdata.data);\r\n      } catch (error) {\r\n        console.error('Error fetching firms:', error);\r\n      }\r\n    };\r\n    fetchFirms();\r\n  }, [userId]);\r\n\r\n  const fetchGeneralLedgers = async (firm_id) => {\r\n    try {\r\n      const response = await fetch(`${api_url}/api/users/get_general_ledgers/${firm_id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch data');\r\n      }\r\n      const data = await response.json();\r\n      return data.data;\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadGeneralLedgers = async () => {\r\n      if (selectedFromFirmId) {\r\n        setLoadingFromGL(true);\r\n        const generalLedgers = await fetchGeneralLedgers(selectedFromFirmId);\r\n        setFromGeneralLedgers(generalLedgers);\r\n        setLoadingFromGL(false);\r\n      }\r\n    };\r\n    loadGeneralLedgers();\r\n  }, [selectedFromFirmId]);\r\n\r\n  useEffect(() => {\r\n    const loadGeneralLedgers = async () => {\r\n      if (selectedToFirmId) {\r\n        setLoadingToGL(true);\r\n        const generalLedgers = await fetchGeneralLedgers(selectedToFirmId);\r\n        setToGeneralLedgers(generalLedgers);\r\n        setLoadingToGL(false);\r\n      }\r\n    };\r\n    loadGeneralLedgers();\r\n  }, [selectedToFirmId]);\r\n\r\n  const handleSavePayment = async () => {\r\n    setShowModal(true); // Show modal on button click\r\n  };\r\n\r\n  const confirmPayment = async () => {\r\n    try {\r\n      const payload = {\r\n        from_gl_id: selectedFromGLId,\r\n        to_gl_id: selectedToGLId,\r\n        amount: Number(amount),\r\n        from_firm_id: selectedFromFirmId,\r\n        to_firm_id: selectedToFirmId\r\n      };\r\n\r\n      const response = await fetch(`${api_url}/api/users/payment/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to process payment');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(result);\r\n      alert('Payment successful');\r\n      setShowModal(false); // Close modal after successful payment\r\n      // Optionally reload or update data after successful payment\r\n    } catch (error) {\r\n      console.error('Error processing payment:', error);\r\n      alert('Payment failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FirmusrSidebar />\r\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\r\n        <FirmusrHeader />\r\n        <Container fluid className=\"flex-grow-1 px-3 px-md-5\">\r\n          <Row className='justify-content-center mb-3'>\r\n            <Col md={12}>\r\n              <Card className='card_border_color_change py-5' style={{ borderColor: \"white\" }}>\r\n                <Row className='allfirms_title_mainrow'>\r\n                  <Col md={9} style={{ marginLeft: \"10px\" }}>\r\n                    <Row className='allfirms_title_row py-1 align-items-center'>\r\n                      <Col md={1}>\r\n                        <img className='' src={AllFirms_logo} width={25} height={25} alt=\"AllFirms Logo\" />\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        <h4>Payments</h4>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col md={2} className='d-flex align-items-center justify-content-end'>\r\n                    <Link to={'/user_allpayments'}>\r\n                      <Button id=\"but_color\">All Payments</Button>\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className='allfirms_table_row py-5 justify-content-center'>\r\n                  <Col md={8} className=\"mb-3 mb-md-0\">\r\n                    <Row className='justify-content-center'>\r\n                      <Col md={12}>\r\n                        <Card className='bg_color_blue_white'>\r\n                          <Card.Body>\r\n                            <Form>\r\n                              <FormGroup className=\"mb-3\" controlId=\"formTransactionID\">\r\n                                <FormLabel>Transaction :</FormLabel>\r\n                              </FormGroup>\r\n                              <FormGroup as={Row} className=\"mb-3\" controlId=\"formFrom\">\r\n                                <FormLabel column sm={3}>From:</FormLabel>\r\n                                <Col sm={5}>\r\n                                  <Form.Control\r\n                                    as=\"select\"\r\n                                    value={selectedFromFirmId}\r\n                                    className='form-select'\r\n                                    onChange={(e) => setSelectedFromFirmId(e.target.value)}\r\n                                  >\r\n                                    <option value=\"\">Select Firm</option>\r\n                                    {firms.map((firm) => (\r\n                                      <option key={firm.firm_id} value={firm.firm_id}>\r\n                                        {firm.firm_name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Form.Control>\r\n                                </Col>\r\n                                <Col sm={4}>\r\n                                  <Form.Control\r\n                                    as=\"select\"\r\n                                    value={selectedFromGLId}\r\n                                    className='form-select'\r\n                                    onChange={(e) => setSelectedFromGLId(e.target.value)}\r\n                                    disabled={loadingFromGL}\r\n                                  >\r\n                                    <option value=\"\">Select Your Firm Account</option>\r\n                                    {fromGeneralLedgers.map((gl) => (\r\n                                      <option key={gl.gl_id} value={gl.gl_id}>\r\n                                        {gl.gl_name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Form.Control>\r\n                                  {loadingFromGL && <p>Loading...</p>}\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup as={Row} className=\"mb-3\" controlId=\"formTo\">\r\n                                <FormLabel column sm={3}>To:</FormLabel>\r\n                                <Col sm={5}>\r\n                                  <Form.Control\r\n                                    as=\"select\"\r\n                                    value={selectedToFirmId}\r\n                                    className='form-select'\r\n                                    onChange={(e) => setSelectedToFirmId(e.target.value)}\r\n                                  >\r\n                                    <option value=\"\">Select Firm</option>\r\n                                    {firms2.map((firm) => (\r\n                                      <option key={firm.firm_id} value={firm.firm_id}>\r\n                                        {firm.firm_name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Form.Control>\r\n                                </Col>\r\n                                <Col sm={4}>\r\n                                  <Form.Control\r\n                                    as=\"select\"\r\n                                    value={selectedToGLId}\r\n                                    className='form-select'\r\n                                    onChange={(e) => setSelectedToGLId(e.target.value)}\r\n                                    disabled={loadingToGL}\r\n                                  >\r\n                                    <option value=\"\">Select Your Firm Account</option>\r\n                                    {toGeneralLedgers.map((gl) => (\r\n                                      <option key={gl.gl_id} value={gl.gl_id}>\r\n                                        {gl.gl_name}\r\n                                      </option>\r\n                                    ))}\r\n                                  </Form.Control>\r\n                                  {loadingToGL && <p>Loading...</p>}\r\n                                </Col>\r\n                              </FormGroup>\r\n                              <FormGroup as={Row} className=\"mb-3\" controlId=\"formAmount\">\r\n                                <FormLabel column sm={3}>Amount :</FormLabel>\r\n                                <Col sm={5}>\r\n                                  <FormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"Amount\"\r\n                                    value={amount}\r\n                                    onChange={(e) => setAmount(e.target.value)}\r\n                                  />\r\n                                </Col>\r\n                              </FormGroup>\r\n                            </Form>\r\n                          </Card.Body>\r\n                        </Card>\r\n                        <Row className='justify-content-center mt-3'>\r\n                          <Button className='col-md-3 col-6' id='but_color' onClick={handleSavePayment}>Pay</Button>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* Confirmation Modal */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Payment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to proceed with this payment?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={confirmPayment}>\r\n            Confirm Payment\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User_MakePayment;\r\n"],"names":["api_url","User_MakePayment","user","useContext","UserContext","userId","firms","setFirms","useState","firms2","setFirms2","selectedFromFirmId","setSelectedFromFirmId","selectedToFirmId","setSelectedToFirmId","fromGeneralLedgers","setFromGeneralLedgers","toGeneralLedgers","setToGeneralLedgers","selectedFromGLId","setSelectedFromGLId","selectedToGLId","setSelectedToGLId","amount","setAmount","loadingFromGL","setLoadingFromGL","loadingToGL","setLoadingToGL","showModal","setShowModal","useEffect","async","response","fetch","concat","ok","Error","resdata","json","data","error","console","fetchFirms","fetchGeneralLedgers","firm_id","generalLedgers","loadGeneralLedgers","_jsxs","children","_jsx","FirmusrSidebar","className","FirmusrHeader","Container","fluid","Row","Col","md","Card","style","borderColor","marginLeft","src","AllFirms_logo","width","height","alt","Link","to","Button","id","Body","Form","FormGroup","controlId","FormLabel","as","column","sm","Control","value","onChange","e","target","map","firm","firm_name","disabled","gl","gl_id","gl_name","FormControl","type","placeholder","onClick","Modal","show","onHide","centered","Header","closeButton","Title","Footer","variant","payload","from_gl_id","to_gl_id","Number","from_firm_id","to_firm_id","method","headers","body","JSON","stringify","result","log","alert"],"sourceRoot":""}